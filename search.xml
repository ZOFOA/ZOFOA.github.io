<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Centos Linux 主机加固</title>
      <link href="/2021/04/22/Centos%20Linux%20%E4%B8%BB%E6%9C%BA%E5%8A%A0%E5%9B%BA/"/>
      <url>/2021/04/22/Centos%20Linux%20%E4%B8%BB%E6%9C%BA%E5%8A%A0%E5%9B%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、身份鉴别"><a href="#一、身份鉴别" class="headerlink" title="一、身份鉴别"></a>一、身份鉴别</h1><h2 id="1、密码策略设置"><a href="#1、密码策略设置" class="headerlink" title="1、密码策略设置"></a><strong>1、密码策略设置</strong></h2><h3 id="etc-login-defs"><a href="#etc-login-defs" class="headerlink" title="/etc/login.defs"></a><strong>/etc/login.defs</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PASS_MAX_DAYS 90   <span class="comment">#可以使用密码的最大天数</span></span><br><span class="line">PASS_MIN_DAYS 2   <span class="comment">#两次密码更改之间允许的最短天数</span></span><br><span class="line">PASS_MIN_LEN 8  <span class="comment">#可接受的最小密码长度</span></span><br><span class="line">PASS_WARN_AGE 7  <span class="comment">#密码过期前给出的警告天数。</span></span><br></pre></td></tr></table></figure><h3 id="etc-pam-d-system-auth"><a href="#etc-pam-d-system-auth" class="headerlink" title="/etc/pam.d/system-auth"></a><strong>/etc/pam.d/system-auth</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type= minlen=8 lcredit=-1 ucredit=-1 dcredit=-1 ocredit=-1 enforce_for_root</span><br><span class="line"></span><br><span class="line">minlen=8 密码最小长度为8个字符。</span><br><span class="line">lcredit=-1 密码应包含的小写字母的至少一个</span><br><span class="line">ucredit=-1 密码应包含的大写字母至少一个</span><br><span class="line">dcredit=-1 将密码包含的数字至少为一个</span><br><span class="line">ocredit=-1 设置其他符号的最小数量，例如@，＃、! $％等，至少要有一个</span><br><span class="line">enforce_for_root 确保即使是root用户设置密码，也应强制执行复杂性策略</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/CentosLinux.assets/image-20210423095402413.png"  alt="image-20210423095402413"> </p><h2 id="2、登录失败处理"><a href="#2、登录失败处理" class="headerlink" title="2、登录失败处理"></a><strong>2、登录失败处理</strong></h2><p><code>pam_faillock PAM</code>模块允许系统管理员锁定在指定次数内登录尝试失败的用户账户。限制用户登录尝试的次数主要是作为一个安全措施，旨在防止可能针对获取用户的账户密码的暴力破解</p><p>通过 <code>pam_faillock</code>模块，将登录尝试失败的数据储存在 /var/run/faillock 目录下每位用户的独立文件中</p><p><strong>配置</strong></p><p>添加以下命令行到 <code>/etc/pam.d/system-auth</code>文件和<code>/etc/pam.d/password-auth</code>文件中的对应区段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auth        required      pam_faillock.so preauth silent audit deny&#x3D;3 unlock_time&#x3D;300</span><br><span class="line">auth        sufficient    pam_unix.so nullok try_first_pass</span><br><span class="line">auth        [default&#x3D;die]  pam_faillock.so  authfail  audit  deny&#x3D;3  unlock_time&#x3D;300</span><br><span class="line">account required  pam_faillock.so</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/CentosLinux.assets/image-20210423095300992.png"  alt="image-20210423095300992"> </p><p><strong>注意：</strong></p><p><code>auth required pam_faillock.so preauth silent audit deny=3</code> 必须在最前面。</p><p>适用于root在<code>pam_faillock</code> 条目里添加 <code>even_deny_root</code> 选项</p><p>查看每个用户的尝试失败次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">faillock</span><br></pre></td></tr></table></figure><p>解锁一个用户的账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">faillock --user root --reset</span><br></pre></td></tr></table></figure><h2 id="3、安装telnet"><a href="#3、安装telnet" class="headerlink" title="3、安装telnet"></a>3、安装telnet</h2><p>检查是否安装有telnet，键入：rpm -qa | grep telnet 回车返回空值则说明没有安装，返回telnet版本号则说明已经安装；</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/CentosLinux.assets/image-20210423103525033.png"  alt="image-20210423103525033"> </p><p>检查是否安装有xinetd，键入：rpm -qa | grep xinetd 回车返回空值则说明没有安装，返回xinetd版本号则说明已经安装；</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/CentosLinux.assets/image-20210423103607366.png"  alt="image-20210423103607366"> </p><p>yum -y install telnet*    # 安装telnet客户端和服务端；</p><p>yum -y install xinetd # 安装xinetd客户端和服务端；</p><p>telnet服务安装之后，默认是不开启服务，修改文件/etc/xinetd.d/telnet来开启服务。如下图，在xinetd.d目下没有telnet文件，那么我们就需要使用 vim telnet 创建一个文件并写入以下内容保存即可，注意如果目录下存在telnet需要将 disable 修改为 disable = no 默认的disable = yes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># default: yes    </span></span><br><span class="line"><span class="comment"># description: The telnet server servestelnet sessions; it uses \   </span></span><br><span class="line"><span class="comment"># unencrypted username/password pairs for authentication.  </span></span><br><span class="line">service telnet         </span><br><span class="line">&#123;  </span><br><span class="line">  flags = REUSE  </span><br><span class="line">  socket_type = stream  </span><br><span class="line">  <span class="built_in">wait</span> = no  </span><br><span class="line">  user = root  </span><br><span class="line">  server =/usr/sbin/in.telnetd  </span><br><span class="line">  log_on_failure += USERID  </span><br><span class="line">  <span class="built_in">disable</span> = no   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于上面修改了telnet配置文件，需要重新启动下服务，看telnet、xinetd是否启动成功；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart xinetd.service    <span class="comment"># 重启xinetd服务；</span></span><br><span class="line">ps -ef | grep xinetd    <span class="comment"># 查看xinetd服务；</span></span><br><span class="line">ps -ef | grep telnet    <span class="comment"># 查看telnet服务；</span></span><br></pre></td></tr></table></figure><p>将telnet和xinetd加入到开机启动服务；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> xinetd.service    <span class="comment"># 将xinetd加入到开机启动服务；</span></span><br><span class="line">systemctl <span class="built_in">enable</span> telnet.socket    <span class="comment">#将telnet加入到开机启动服务；</span></span><br></pre></td></tr></table></figure><p>防火墙开启23端口允许通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-port=23/tcp <span class="comment"># 查询端口是否开放</span></span><br><span class="line">firewall-cmd --add-port=23/tcp --permanent <span class="comment">#永久添加23端口例外(全局)</span></span><br><span class="line">firewall-cmd --add-port=23/udp --permanent</span><br><span class="line">firewall-cmd --reload <span class="comment">#重启防火墙(修改配置后要重启防火墙)</span></span><br><span class="line"></span><br><span class="line">PS:基础防火墙配置</span><br><span class="line">1、安装</span><br><span class="line">yum install iptables-services <span class="comment">#安装iptables</span></span><br><span class="line"></span><br><span class="line">2、systemctl使用</span><br><span class="line">systemctl unmask firewalld <span class="comment">#执行命令，即可实现取消服务的锁定</span></span><br><span class="line">systemctl mask firewalld <span class="comment"># 下次需要锁定该服务时执行</span></span><br><span class="line">systemctl start firewalld.service <span class="comment">#启动防火墙</span></span><br><span class="line">systemctl stop firewalld.service <span class="comment">#停止防火墙</span></span><br><span class="line">systemctl reloadt firewalld.service <span class="comment">#重载配置</span></span><br><span class="line">systemctl restart firewalld.service <span class="comment">#重启服务</span></span><br><span class="line">systemctl status firewalld.service <span class="comment">#显示服务的状态</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld.service <span class="comment">#在开机时启用服务</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service <span class="comment">#在开机时禁用服务</span></span><br><span class="line">systemctl is-enabled firewalld.service <span class="comment">#查看服务是否开机启动</span></span><br><span class="line">systemctl list-unit-files|grep enabled <span class="comment">#查看已启动的服务列表</span></span><br><span class="line">systemctl --failed <span class="comment">#查看启动失败的服务列表</span></span><br><span class="line"></span><br><span class="line">3、firewall-cmd使用</span><br><span class="line">firewall-cmd --state <span class="comment">#查看防火墙状态</span></span><br><span class="line">firewall-cmd --reload <span class="comment">#更新防火墙规则</span></span><br><span class="line">firewall-cmd --state <span class="comment">#查看防火墙状态</span></span><br><span class="line">firewall-cmd --reload <span class="comment">#重载防火墙规则</span></span><br><span class="line">firewall-cmd --list-ports <span class="comment">#查看所有打开的端口</span></span><br><span class="line">firewall-cmd --list-services <span class="comment">#查看所有允许的服务</span></span><br><span class="line">firewall-cmd --get-services <span class="comment">#获取所有支持的服务</span></span><br><span class="line"><span class="comment">#区域相关</span></span><br><span class="line">firewall-cmd --list-all-zones <span class="comment">#查看所有区域信息</span></span><br><span class="line">firewall-cmd --get-active-zones <span class="comment">#查看活动区域信息</span></span><br><span class="line">firewall-cmd --<span class="built_in">set</span>-default-zone=public <span class="comment">#设置public为默认区域</span></span><br><span class="line">firewall-cmd --get-default-zone <span class="comment">#查看默认区域信息</span></span><br><span class="line">firewall-cmd --zone=public --add-interface=eth0 <span class="comment">#将接口eth0加入区域public</span></span><br><span class="line"><span class="comment">#接口相关</span></span><br><span class="line">firewall-cmd --zone=public --remove-interface=eth0 <span class="comment">#从区域public中删除接口eth0</span></span><br><span class="line">firewall-cmd --zone=default --change-interface=eth0 <span class="comment">#修改接口eth0所属区域为default</span></span><br><span class="line">firewall-cmd --get-zone-of-interface=eth0 <span class="comment">#查看接口eth0所属区域</span></span><br><span class="line"></span><br><span class="line">4、用例</span><br><span class="line">firewall-cmd --query-port=8080/tcp <span class="comment"># 查询端口是否开放</span></span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent <span class="comment">#永久添加80端口例外(全局)</span></span><br><span class="line">firewall-cmd --remove-port=80/tcp --permanent <span class="comment">#永久删除80端口例外(全局)</span></span><br><span class="line">firewall-cmd --add-port=65001-65010/tcp --permanent <span class="comment">#永久增加65001-65010例外(全局)</span></span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent <span class="comment">#永久添加80端口例外(区域public)</span></span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent <span class="comment">#永久删除80端口例外(区域public)</span></span><br><span class="line">firewall-cmd --zone=public --add-port=65001-65010/tcp --permanent <span class="comment">#永久增加65001-65010例外(区域public)</span></span><br><span class="line">firewall-cmd --reload <span class="comment">#重启防火墙(修改配置后要重启防火墙)</span></span><br></pre></td></tr></table></figure><h2 id="4、Linux用户密码加密方式"><a href="#4、Linux用户密码加密方式" class="headerlink" title="4、Linux用户密码加密方式"></a>4、Linux用户密码加密方式</h2><p>对于示例的密码域security:$6$/8I.5J/u70BOWYri$TfgBP0YJhGcFmZlKQQnetNVV.aaS7GGYefEaeFsvKHA/LbBWYMcxTMYMpJtCihFkaE/OKqgQF/bSJAUR4SvTk1:18739:0:99999:7:::，我们参考了linux标准源文件passwd.c，在其中的pw_encrypt函数中找到了加密方法。</p><p>我们发现所谓的加密算法，其实就是用明文密码和一个叫salt的东西通过函数crypt()完成加密。</p><p>而所谓的密码域密文也是由三部分组成的，即：$id$salt$encrypted。</p><p>【注】：</p><p>id为1时，采用md5进行加密；</p><p>id为5时，采用SHA256进行加密；</p><p>id为6时，采用SHA512进行加密。</p>]]></content>
      
      
      <categories>
          
          <category> 等保2.0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 主机加固 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为交换机配置</title>
      <link href="/2021/04/20/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/04/20/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="创建VLAN"><a href="#创建VLAN" class="headerlink" title="创建VLAN"></a>创建VLAN</h3><p>system_view<br>vlan 10 或 vlan batch 10 to 13</p><h3 id="给-VLAN配置ip"><a href="#给-VLAN配置ip" class="headerlink" title="给 VLAN配置ip"></a>给 VLAN配置ip</h3><p>interface vlanif 10</p><p>ip address 192.168.10.1 24</p><h3 id="配置端口组加入vlan-10"><a href="#配置端口组加入vlan-10" class="headerlink" title="配置端口组加入vlan 10"></a>配置端口组加入vlan 10</h3><p>port-group 1  #创建端口组</p><p>group-member GigabitEthernet 0/0/1 to GigabitEthernet 0/0/5  #选择1-5端口</p><p>port link-type access #接口为access口，显示1~6口设置为access类型</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Untitled.assets/image-20210421113847791.png"  alt="image-20210421113847791"> </p><p>port default vlan 10 端口组所有端口加入vlan10</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Untitled.assets/image-20210421114010479.png"  alt="image-20210421114010479"> </p><p>save </p><h3 id="用户视图保存配置"><a href="#用户视图保存配置" class="headerlink" title="用户视图保存配置"></a>用户视图保存配置</h3><p>Quidway] display version</p><h3 id="显示VRP版本号"><a href="#显示VRP版本号" class="headerlink" title="显示VRP版本号"></a>显示VRP版本号</h3><p>[Quidway] display current-configuration</p><h3 id="显示系统运行配置信息"><a href="#显示系统运行配置信息" class="headerlink" title="显示系统运行配置信息"></a>显示系统运行配置信息</h3><p>[Quidway] display saved-configuration</p><h3 id="显示保存的配置信息"><a href="#显示保存的配置信息" class="headerlink" title="显示保存的配置信息"></a>显示保存的配置信息</h3><p>[Quidway] display interfaces brief</p><h3 id="显示接口配置信息"><a href="#显示接口配置信息" class="headerlink" title="显示接口配置信息"></a>显示接口配置信息</h3><p>[Quidway]display ip routing-table</p><h3 id="显示路由表"><a href="#显示路由表" class="headerlink" title="显示路由表"></a>显示路由表</h3><p>user-interface maximum-vty 15 </p><h3 id="配置VTY用户界面的最大个数（同时可以登录的最大数）"><a href="#配置VTY用户界面的最大个数（同时可以登录的最大数）" class="headerlink" title="配置VTY用户界面的最大个数（同时可以登录的最大数）"></a>配置VTY用户界面的最大个数（同时可以登录的最大数）</h3><p>telnet server enable</p><h3 id="开启telnet"><a href="#开启telnet" class="headerlink" title="开启telnet"></a>开启telnet</h3><p>undo interface Vlanif 2    //删除Vlan 接口<br>undo vlan 2          //删除创建的vlan</p><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>user-interface maximum-vty 15 </p><h3 id="配置VTY用户界面的最大个数（同时可以登录的最大数）-1"><a href="#配置VTY用户界面的最大个数（同时可以登录的最大数）-1" class="headerlink" title="配置VTY用户界面的最大个数（同时可以登录的最大数）"></a>配置VTY用户界面的最大个数（同时可以登录的最大数）</h3><p>user-interface vty 0 4 </p><h3 id="进入虚拟终端"><a href="#进入虚拟终端" class="headerlink" title="进入虚拟终端"></a>进入虚拟终端</h3><p>authentication-mode aaa</p><h3 id="设置认证模式为AAA"><a href="#设置认证模式为AAA" class="headerlink" title="设置认证模式为AAA"></a>设置认证模式为AAA</h3><h3 id="配置视图-aaa"><a href="#配置视图-aaa" class="headerlink" title="配置视图 aaa"></a>配置视图 aaa</h3><p>local-user admin password cipher 123456</p><p>创建用户admin 123456</p><p>local-user admin privilege level 3</p><h3 id="设置授权访问级别"><a href="#设置授权访问级别" class="headerlink" title="设置授权访问级别"></a>设置授权访问级别</h3><p>local-user admin service-type telnet</p><h3 id="授权使用的服务"><a href="#授权使用的服务" class="headerlink" title="授权使用的服务"></a>授权使用的服务</h3><p>user-interface con 0 </p><p>进入console</p><p>authentication-mode aaa</p><h3 id="设置认证模式为AAA-1"><a href="#设置认证模式为AAA-1" class="headerlink" title="设置认证模式为AAA"></a>设置认证模式为AAA</h3><p>#创建acl策略<br>acl name kongzhi 2001<br>rule 5 permit source 192.168.13.0 0.0.0.255<br>rule 10 deny</p><p>#在vty接口应用acl 2001<br>user-interface vty 0 4<br>acl 2001 inbound</p>]]></content>
      
      
      <categories>
          
          <category> 等保2.0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓APP证书签名验证</title>
      <link href="/2021/04/20/%E5%AE%89%E5%8D%93app%E8%AF%81%E4%B9%A6%E7%AD%BE%E5%90%8D%E9%AA%8C%E8%AF%81/"/>
      <url>/2021/04/20/%E5%AE%89%E5%8D%93app%E8%AF%81%E4%B9%A6%E7%AD%BE%E5%90%8D%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安卓APP证书签名验证"><a href="#安卓APP证书签名验证" class="headerlink" title="安卓APP证书签名验证"></a>安卓APP证书签名验证</h1><h2 id="一、签名验证"><a href="#一、签名验证" class="headerlink" title="一、签名验证"></a>一、签名验证</h2><h3 id="方法一-keytool-只支持V1签名校验"><a href="#方法一-keytool-只支持V1签名校验" class="headerlink" title="方法一(keytool,只支持V1签名校验)"></a><strong>方法一(keytool,只支持V1签名校验)</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keytool -printcert -jarfile C:\Users\zhfe\Desktop\b953d9cfc2d9b0f423eee2354ae0c9e1.apk</span><br><span class="line"></span><br><span class="line">keytool -printcert -jarfile MyApp.apk (显示签名证书信息)</span><br></pre></td></tr></table></figure><p>参数:</p><blockquote><p>​    -printcert      打印证书内容<br>​    -jarfile <filename> 已签名的jar文件 或apk文件 </p></blockquote><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Untitled.assets/image-20210420102241917.png"  alt="image-20210420102241917"> </p><p><strong>这是一个X.509 v3证书。包含如下内容：</strong></p><ul><li><p><strong>owner所有者：公钥持有者</strong></p></li><li><p><strong>issuer颁发者：为公钥提供保证的人</strong></p></li><li><p><strong>serial number序列号：证书唯一标识</strong></p></li><li><p><strong>valid from … until有效期：证书有效期，作为证书有效性验证</strong></p></li><li><p><strong>certification fingerprints证书指纹：证书数字校验和，验证是否被篡改</strong></p><p>其中与app相关的签名是 cert.sf 文件，可以使用 cat 命令查看</p><p>两个文件都列出了各个资源文件的hash值，并经过了base64编码</p></li></ul><p><strong>三个文件的具体内容以及作用：</strong></p><p>​        解压apk，META-INF包含.MF、.RSA、.SF三个文件</p><ul><li><strong>manifest.mf: 声明资源</strong></li><li><strong>cert.rsa: 公钥证书</strong></li><li><strong>cert.sf: 包含app所有资源，负责对app签名，包含jar指定的密码学意义上的签名</strong></li></ul><h3 id="方法二-apksigner-支持V1和V2签名校验"><a href="#方法二-apksigner-支持V1和V2签名校验" class="headerlink" title="方法二(apksigner,支持V1和V2签名校验)"></a><strong>方法二(apksigner,支持V1和V2签名校验)</strong></h3><p>  进入Android SDK/build-tools/SDK版本, 输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apksigner verify -v --print-certs xxx.apk</span><br></pre></td></tr></table></figure><p>  参数:</p><blockquote><p>​    -v, –verbose 显示详情(显示是否使用V1和V2签名)<br>​    –print-certs 显示签名证书信息</p></blockquote><p>  例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apksigner verify -v MyApp.apk</span><br></pre></td></tr></table></figure><blockquote><p>​    Verifies<br>​    Verified using v1 scheme (JAR signing): true<br>​    Verified using v2 scheme (APK Signature Scheme v2): true<br>​    Number of signers: 1</p></blockquote><h2 id="二、工具介绍"><a href="#二、工具介绍" class="headerlink" title="二、工具介绍"></a><strong>二、工具介绍</strong></h2><p>jarsigner是JDK提供的针对jar包签名的通用工具,</p><p>位于JDK/bin/jarsigner.exe</p><p>apksigner是Google官方提供的针对Android apk签名及验证的专用工具,</p><p>位于Android SDK/build-tools/SDK版本/apksigner.bat</p><p>不管是apk包,还是jar包,本质都是zip格式的压缩包,所以它们的签名过程都差不多(仅限V1签名),</p><p>以上两个工具都可以对Android apk包进行签名.</p><h3 id="1-V1和V2签名的区别"><a href="#1-V1和V2签名的区别" class="headerlink" title="1.V1和V2签名的区别"></a><strong>1.V1和V2签名的区别</strong></h3><p>在Android Studio中点击菜单 Build-&gt;Generate signed apk… 打包签名过程中,</p><p>可以看到两种签名选项 V1(Jar Signature) V2(Full APK Signature),</p><p>刚开始升级AS看到这个懵了,既然是APK Signature,就放心偷懒选了V2,结果安装失败？？？无奈,只能查资料…</p><p>从Android 7.0开始, 谷歌增加新签名方案 V2 Scheme (APK Signature);</p><p>但Android 7.0以下版本, 只能用旧签名方案 V1 scheme (JAR signing)</p><p>V1签名:</p><ul><li>来自JDK(jarsigner), 对zip压缩包的每个文件进行验证, 签名后还能对压缩包修改(移动/重新压缩文件)</li><li>对V1签名的apk/jar解压,在META-INF存放签名文件(MANIFEST.MF, CERT.SF, CERT.RSA),</li><li>其中MANIFEST.MF文件保存所有文件的SHA1指纹(除了META-INF文件), 由此可知: V1签名是对压缩包中单个文件签名验证</li></ul><p>V2签名:</p><ul><li>来自Google(apksigner), 对zip压缩包的整个文件验证, 签名后不能修改压缩包(包括zipalign),</li><li>对V2签名的apk解压,没有发现签名文件,重新压缩后V2签名就失效, 由此可知: V2签名是对整个APK签名验证</li></ul><p>V2签名优点很明显:</p><ul><li>签名更安全(不能修改压缩包)</li><li>签名验证时间更短(不需要解压验证),因而安装速度加快</li></ul><p><strong>注意:</strong> apksigner工具默认同时使用V1和V2签名,以兼容Android 7.0以下版本</p><h3 id="2-zipalign和V2签名"><a href="#2-zipalign和V2签名" class="headerlink" title="2.zipalign和V2签名"></a><strong>2.zipalign和V2签名</strong></h3><p>位于Android SDK/build-tools/SDK版本/zipalign.exe</p><p>zipalign 是对zip包对齐的工具,使APK包内未压缩的数据有序排列对齐,从而减少APP运行时内存消耗</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipalign -v &#96;&#96;4&#96; &#96;in.apk out.apk &#96;&#96;&#x2F;&#x2F;4字节对齐优化&#96;&#96;zipalign -c -v &#96;&#96;4&#96; &#96;in.apk &#96;&#96;&#x2F;&#x2F;检查APK是否对齐</span><br></pre></td></tr></table></figure><p>zipalign可以在V1签名后执行</p><p>但zipalign不能在V2签名后执行,只能在V2签名之前执行！！！</p><h2 id="三、签名步骤"><a href="#三、签名步骤" class="headerlink" title="三、签名步骤"></a><strong>三、签名步骤</strong></h2><h3 id="1-生成密钥对-已有密钥库-可忽略"><a href="#1-生成密钥对-已有密钥库-可忽略" class="headerlink" title="1.生成密钥对(已有密钥库,可忽略)"></a><strong>1.生成密钥对(已有密钥库,可忽略)</strong></h3><p>Eclipse或Android Studio在Debug时,对App签名都会使用一个默认的密钥库:</p><ul><li>默认在C:\Users\用户名.android\debug.keystore</li><li>密钥库名:  debug.keystore</li><li>密钥别名:  androiddebugkey</li><li>密钥库密码: android</li></ul><p><strong>生成密钥对</strong></p><p>  进入JDK/bin, 输入命令 </p><p>  keytool -genkeypair -keystore 密钥库名 -alias 密钥别名 -validity 天数 -keyalg RSA</p><p>  参数:</p><blockquote><p>​    -genkeypair 生成一条密钥对(由私钥和公钥组成)<br>​    -keystore  密钥库名字以及存储位置(默认当前目录)<br>​    -alias    密钥对的别名(密钥库可以存在多个密钥对,用于区分不同密钥对)<br>​    -validity  密钥对的有效期(单位: 天)<br>​    -keyalg   生成密钥对的算法(常用RSA/DSA,DSA只用于签名,默认采用DSA)<br>​    -delete   删除一条密钥</p></blockquote><p>  提示: 可重复使用此条命令,在同一密钥库中创建多条密钥对</p><p>  例如:   </p><p>​    在debug.keystore中新增一对密钥,别名是release</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkeypair -keystore debug.keystore -alias release -validity 30000</span><br></pre></td></tr></table></figure><h3 id="2-查看密钥库"><a href="#2-查看密钥库" class="headerlink" title="2.查看密钥库"></a><strong>2.查看密钥库</strong></h3><p>  进入JDK/bin, 输入命令</p><p>  keytool -list -v -keystore 密钥库名</p><p>  参数:</p><blockquote><p>​    -list 查看密钥列表<br>​    -v  查看密钥详情</p></blockquote><p>  例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -v -keystore debug.keystore</span><br></pre></td></tr></table></figure><p>​    现在debug.keystore密钥库中有两对密钥, 别名分别是androiddebugkey release</p><h3 id="3-签名"><a href="#3-签名" class="headerlink" title="3.签名"></a><strong>3.签名</strong></h3><h4 id="方法一-jarsigner-只支持V1签名"><a href="#方法一-jarsigner-只支持V1签名" class="headerlink" title="方法一(jarsigner,只支持V1签名)"></a><strong>方法一(jarsigner,只支持V1签名)</strong></h4><p>  进入JDK/bin, 输入命令</p><p>  jarsigner -keystore 密钥库名 xxx.apk 密钥别名</p><p>  从JDK7开始, jarsigner默认算法是SHA256, 但Android 4.2以下不支持该算法,</p><p>  所以需要修改算法, 添加参数 -digestalg SHA1 -sigalg SHA1withRSA</p><p>  jarsigner -keystore 密钥库名 -digestalg SHA1 -sigalg SHA1withRSA xxx.apk 密钥别名</p><p>  参数:</p><blockquote><p>​    -digestalg 摘要算法<br>​    -sigalg   签名算法</p></blockquote><p>  例如:</p><p>​    用JDK7及以上jarsigner签名,不支持Android 4.2 以下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -keystore debug.keystore MyApp.apk androiddebugkey</span><br></pre></td></tr></table></figure><p>​    用JDK7及以上jarsigner签名,兼容Android 4.2 以下      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -keystore debug.keystore -digestalg SHA1 -sigalg SHA1withRSA MyApp.apk androiddebugkey</span><br></pre></td></tr></table></figure><h4 id="方法二-apksigner-默认同时使用V1和V2签名"><a href="#方法二-apksigner-默认同时使用V1和V2签名" class="headerlink" title="方法二(apksigner,默认同时使用V1和V2签名)"></a><strong>方法二(apksigner,默认同时使用V1和V2签名)</strong></h4><p>  进入Android SDK/build-tools/SDK版本, 输入命令</p><p>  apksigner sign –ks 密钥库名 –ks-key-alias 密钥别名 xxx.apk</p><p>  若密钥库中有多个密钥对,则必须指定密钥别名</p><p>  apksigner sign –ks 密钥库名 –ks-key-alias 密钥别名 xxx.apk</p><p>  禁用V2签名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apksigner sign --v2-signing-enabled &#96;&#96;false&#96; &#96;--ks 密钥库名 xxx.apk</span><br></pre></td></tr></table></figure><p>  参数:</p><blockquote><p>​    –ks-key-alias    密钥别名,若密钥库有一个密钥对,则可省略,反之必选<br>​    –v1-signing-enabled 是否开启V1签名,默认开启<br>​    –v2-signing-enabled 是否开启V2签名,默认开启</p></blockquote><p>  例如:</p><p>​    在debug.keystore密钥库只有一个密钥对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apksigner sign --ks debug.keystore MyApp.apk</span><br></pre></td></tr></table></figure><p>​    在debug.keystore密钥库中有多个密钥对,所以必须指定密钥别名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apksigner sign --ks debug.keystore --ks-key-alias androiddebugkey MyApp.apk</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 等保2.0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 证书签名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年个人年度总结</title>
      <link href="/2020/12/29/2020%E4%B8%AA%E4%BA%BA%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2020/12/29/2020%E4%B8%AA%E4%BA%BA%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2020年个人工作总结"><a href="#2020年个人工作总结" class="headerlink" title="2020年个人工作总结"></a>2020年个人工作总结</h2><p>2020年，在质控部工作已经一年了，在这一年的时间中有收获、有成长。2020年已接近尾声了，总结我这一年的工作，总的来说是探索、责任、担当、忙碌。</p><p>来到新的部门，对于之前从事技术、测评工作的我质量管理完全是零起点，相关质量管理制度、流程办法都需要一点一点的去学习、探索。在新的部门中，我主要职责是完成项目质量评审工作，参与团队质量管理体系建设、质量考评等相关工作，在程老师的带领下，熟悉了质量管理工作的严谨公正、责任担当的精神。</p><p>今年，除了完成本职工作外，还参与了测评部的现场测评工作，带领小组完成项目测评。在测评项目中，担任项目负责人深感责任重大，现场需要协调一切事情，遇到自己不会的需要自己去不断学习，去提高自己的能力，去更好的解决问题。通过今年的项目现场测评实施，锻炼了自己，有成长、有收获，完全体会到了项目负责人的责任担当、技术实力、项目控制、沟通协调等能力要求。</p><p>在下半年中，是忙碌的，为能够保证测评部完成测评项目，从7月份开始陆续支援测评部开展项目测评，同时质控部的相关事情也要同时进行，在这个过程中总的来说是好的，但还是出现了一些不好、有待提高的事情。由于工作的性质比较特殊，工作中细节比较重要，往往被忽略的一个小小的问题可能就会造成一些安全隐患，所以在以后的工作中，我一定要认真对待每一件事情，做到积极、认真、负责。</p><p>回顾这一年，有失败、有成长、有收获，虽然没有真正意义上提高整体质量水平，但规范了质量管理的制度、方式、流程及标准，填补了公司之前的空白，希望在2021年质量控制工作更上一层楼。最后还是感谢，感谢公司提供这个良好工作平台，感谢领导和同事的支持和帮助。</p><h2 id="2021年工作目标计划"><a href="#2021年工作目标计划" class="headerlink" title="2021年工作目标计划"></a>2021年工作目标计划</h2><p>时间在流逝，世界在发展，外部因素越来越严峻，在这种形式下，只有严格要求自己，不断的学习提升自己，才会跟上世界的脚步。</p><p>居安思危，未雨绸缪，越是在繁荣昌盛之时，越要保持冷静，越是身处太平盛世，越要提高忧患意识。思则有备、有备无患，坚持末雨绸缪，才能在飞速前进的脚步中成长，在新的一年中，我要认真工作，完善自己，抱着忧患意识，争取做好每一件事情。</p><p>不忘初心，励志前行，希望不要忘记自己的最初意志，做到事前担责、事中尽责、事后负责，向着自己的梦想奋力前行。</p>]]></content>
      
      
      <categories>
          
          <category> 2020 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word文档错别字检查工具</title>
      <link href="/2020/06/21/Word%E9%94%99%E5%88%AB%E5%AD%97%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/06/21/Word%E9%94%99%E5%88%AB%E5%AD%97%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>此程序用于检查Word文档中的错别字，使用此程序需自己提供错误字词库“1.md”以及对应正确字词库“2.md”。字词库内容以行区分，需放置程序同级目录。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> win32com <span class="keyword">import</span> client</span><br><span class="line"><span class="keyword">from</span> colorama <span class="keyword">import</span> Fore,Back,Style,init</span><br><span class="line">init(autoreset=<span class="literal">True</span>)</span><br><span class="line">print(Back.BLACK + Fore.WHITE + Style.BRIGHT + <span class="string">"************************************************************"</span>)</span><br><span class="line">print(Back.BLACK + Fore.WHITE + Style.BRIGHT + <span class="string">"***************  Word文档错别字检查工具V2.0  ***************"</span>)</span><br><span class="line">print(Back.BLACK + Fore.WHITE + Style.BRIGHT + <span class="string">"************************************************************"</span>)</span><br><span class="line">print(Fore.MAGENTA + Style.BRIGHT + <span class="string">'''\nPS：\n  1、附件“1.md”为错别字库，每个错别字以行结尾；\n  2、附件“2.md”为错别字库对应建议修改值；\n  3、所有附件需放在此程序同级目录中;\n  4、请保存已打开的Word文档，否则继续执行将自动关闭Word文档。\n '''</span>)</span><br><span class="line">print(Fore.GREEN + Style.BRIGHT + <span class="string">"\nloading......\n"</span>)</span><br><span class="line"><span class="comment">#path = "d:\\1.docx"</span></span><br><span class="line">print(Fore.GREEN + Style.BRIGHT + <span class="string">"请输入报告路径，例如：d:\\1.docx ；或鼠标拖拽报告到本程序框中。\n"</span>)</span><br><span class="line">path = (input(<span class="string">'Path：'</span>))</span><br><span class="line">start = time.time()</span><br><span class="line">print(Style.BRIGHT + <span class="string">"\n您输入的路径是：&#123;0&#125;"</span>.format(path))</span><br><span class="line">print(Fore.GREEN + Style.BRIGHT + <span class="string">"\nloading......\n"</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">docxdate</span><span class="params">(docname)</span>:</span></span><br><span class="line">    a=[]</span><br><span class="line">    word = client.gencache.EnsureDispatch(<span class="string">'Word.Application'</span>)</span><br><span class="line">    doc = word.Documents.Open(docname)</span><br><span class="line">    word.Visible = <span class="number">0</span> <span class="comment"># 后台运行</span></span><br><span class="line">    word.DisplayAlerts = <span class="number">0</span> <span class="comment"># 不显示，不警告</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> doc.Paragraphs:</span><br><span class="line">        a.append(p.Range.Text.strip())</span><br><span class="line">        print(Fore.GREEN + Style.BRIGHT + p.Range.Text.strip())</span><br><span class="line">    doc.Close() <span class="comment">#doc.Close() //关闭 word 文档 #word.Quit()  //关闭 office</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'\n'</span>.join(a)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">docxcon = docxdate(path)</span><br><span class="line">con= open(<span class="string">'./2.md'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">a=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> con:</span><br><span class="line">    bcon=i.strip()</span><br><span class="line">    a.append(bcon)</span><br><span class="line">textcon= open(<span class="string">'./1.md'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="comment">#只读方式打开text文件b textcon= open('d:/1.md','r',encoding='utf-8')  </span></span><br><span class="line">j=<span class="number">0</span></span><br><span class="line">z=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> textcon:</span><br><span class="line">    linecon=i.strip()  <span class="comment">#Python strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列</span></span><br><span class="line">    z=z+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> linecon <span class="keyword">in</span> docxcon:</span><br><span class="line">        j=j+<span class="number">1</span></span><br><span class="line">        d=z<span class="number">-1</span></span><br><span class="line">        c=a[d]</span><br><span class="line">        print(Style.BRIGHT + <span class="string">"\ninfo &#123;0&#125;"</span>.format(j))</span><br><span class="line">        print(Back.GREEN + Fore.WHITE + Style.BRIGHT + <span class="string">"—————发现错别字： &#123;0&#125;"</span>.format(linecon))</span><br><span class="line">        print(Back.GREEN + Fore.WHITE + Style.BRIGHT + <span class="string">"—————建议替换为： &#123;0&#125;"</span>.format(c))</span><br><span class="line">textcon.close()</span><br><span class="line">end = time.time()</span><br><span class="line">print(Style.BRIGHT + <span class="string">"\n\nWord错别字检查已完成，共耗时 &#123;:.3f&#125; 秒，退出请按 ENTER ！"</span>.format(end-start))</span><br><span class="line">input(<span class="string">''</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> win32com <span class="keyword">import</span> client</span><br><span class="line"><span class="keyword">from</span> colorama <span class="keyword">import</span> Fore,Back,Style,init</span><br><span class="line">init(autoreset=<span class="literal">True</span>)</span><br><span class="line">print(Back.BLACK + Fore.WHITE + Style.BRIGHT + <span class="string">"************************************************************"</span>)</span><br><span class="line">print(Back.BLACK + Fore.WHITE + Style.BRIGHT + <span class="string">"***************  Word文档错别字检查工具V3.0  ***************"</span>)</span><br><span class="line">print(Back.BLACK + Fore.WHITE + Style.BRIGHT + <span class="string">"************************************************************"</span>)</span><br><span class="line">print(Fore.MAGENTA + Style.BRIGHT + <span class="string">'''\nPS：\n  1、附件“readme.md”为错别字库以及对应的正确值，每个错别字以行结尾；\n  2、错别字库附件需放在此程序同级目录中;\n  3、请保存已打开的Word文档，否则继续执行将自动关闭Word文档。\n '''</span>)</span><br><span class="line">print(Fore.GREEN + Style.BRIGHT + <span class="string">"\nloading......\n"</span>)</span><br><span class="line"><span class="comment">#path = "d:\\1.docx"</span></span><br><span class="line">print(Fore.GREEN + Style.BRIGHT + <span class="string">"请输入报告路径，例如：d:\\1.docx ；或鼠标拖拽报告到本程序框中。\n"</span>)</span><br><span class="line">path = (input(<span class="string">'Path：'</span>))</span><br><span class="line">start = time.time()</span><br><span class="line">print(Style.BRIGHT + <span class="string">"\n您输入的路径是：&#123;0&#125;"</span>.format(path))</span><br><span class="line">print(Fore.GREEN + Style.BRIGHT + <span class="string">"\nloading......\n"</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">docxdate</span><span class="params">(docname)</span>:</span></span><br><span class="line">    a=[]</span><br><span class="line">    word = client.gencache.EnsureDispatch(<span class="string">'Word.Application'</span>)</span><br><span class="line">    doc = word.Documents.Open(docname)</span><br><span class="line">    word.Visible = <span class="number">0</span> <span class="comment"># 后台运行</span></span><br><span class="line">    word.DisplayAlerts = <span class="number">0</span> <span class="comment"># 不显示，不警告</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> doc.Paragraphs:</span><br><span class="line">        a.append(p.Range.Text.strip())</span><br><span class="line">        print(Fore.GREEN + Style.BRIGHT + p.Range.Text.strip())</span><br><span class="line">    doc.Close() <span class="comment">#doc.Close() //关闭 word 文档 #word.Quit()  //关闭 office</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'\n'</span>.join(a)</span><br><span class="line">docxcon = docxdate(path)</span><br><span class="line">b=[]</span><br><span class="line">j=<span class="number">0</span></span><br><span class="line">z=<span class="number">0</span></span><br><span class="line">con= open(<span class="string">'./readme.md'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)<span class="comment">#只读方式打开text文件b textcon= open('d:/1.md','r',encoding='utf-8')</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> con:</span><br><span class="line">    ccon=i.strip(<span class="string">"\n"</span>)</span><br><span class="line">    e1=ccon.split(<span class="string">"/"</span>,<span class="number">2</span>)[<span class="number">0</span>]</span><br><span class="line">    e2=ccon.split(<span class="string">"/"</span>,<span class="number">2</span>)[<span class="number">1</span>]</span><br><span class="line">    b.append(e2)  </span><br><span class="line">    z=z+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> e1 <span class="keyword">in</span> docxcon:</span><br><span class="line">        j=j+<span class="number">1</span></span><br><span class="line">        d=z<span class="number">-1</span></span><br><span class="line">        c=b[d]</span><br><span class="line">        print(Style.BRIGHT + <span class="string">"\ninfo &#123;0&#125;"</span>.format(j))</span><br><span class="line">        print(Back.GREEN + Fore.WHITE + Style.BRIGHT + <span class="string">"—————发现错别字： &#123;0&#125;"</span>.format(e1))</span><br><span class="line">        print(Back.GREEN + Fore.WHITE + Style.BRIGHT + <span class="string">"—————建议替换为： &#123;0&#125;"</span>.format(c))</span><br><span class="line">con.close()</span><br><span class="line">end = time.time()</span><br><span class="line">print(Style.BRIGHT + <span class="string">"\n\nWord错别字检查已完成，共耗时 &#123;:.2f&#125; 秒，退出请按 ENTER ！"</span>.format(end-start))</span><br><span class="line">input(<span class="string">''</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 系统审计功能</title>
      <link href="/2020/05/14/Linux%20%E7%B3%BB%E7%BB%9F%E5%AE%A1%E8%AE%A1%E5%8A%9F%E8%83%BD/"/>
      <url>/2020/05/14/Linux%20%E7%B3%BB%E7%BB%9F%E5%AE%A1%E8%AE%A1%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux-系统审计功能"><a href="#Linux-系统审计功能" class="headerlink" title="Linux 系统审计功能"></a>Linux 系统审计功能</h1><p><code>audit</code>主要用来记录安全信息，用于对系统安全事件的追溯；而 <code>syslog</code> 日志系统用来记录系统中的各种信息，如硬件警报和软件日志等。但是<code>syslog</code> 属于应用层，没办法记录太多信息。audit 来记录内核信息，包括文件的读写，权限的改变等。</p><p>通过<code>auditctl -s</code>命令查看auditd内核模块的状态,<code>enabled</code>为1表示<strong>启动</strong>，<code>enabled</code>为0表示<strong>停止</strong>，<code>enabled</code>为2表示<strong>规则锁定</strong>（重启后才能修改规则）</p><p>可以通过<code>auditctl -e</code>改变状态，0 不使能，1 使能，2 锁定配置。</p><p><code>enabled</code>为1但<code>auditd</code>守护进程没有开启时，内核收集到的信息将会记录到写到<code>/var/log/messages</code>中</p><p><code>audit</code>的审计规则大概有两类：一类是对文件的监控，一类是对系统调用的监控。</p><h1 id="audit审计规则"><a href="#audit审计规则" class="headerlink" title="audit审计规则"></a>audit审计规则</h1><p>通过<code>auditctl -l</code>查看现在运行着的审计规则（默认是无规则<code>No rules</code>）</p><p>通过<code>/etc/audit/audit.rules</code>文件查看配置文件中的永久审计规则</p><p>对于文件，可以定义审计规则监控对该文件的读、写、执行等操作，一旦发生，就会记录到</p><p>日志文件中。 如对.bash_history文件的写和属性更改进行监控：<code>auditctl -w /root/.bash_history -p wa</code></p><p>对于系统调用，可以定义审计规则对于命令的调用，比如用以下名监控对umask、chown命令的调用：<code>auditctl -a exit,always -S umask -S chown</code></p><h1 id="audit事件工具"><a href="#audit事件工具" class="headerlink" title="audit事件工具"></a>audit事件工具</h1><p>audit提供三个工具<code>aureport</code>、<code>ausearch</code>、<code>autrace</code>有针对性地去统计分析以及跟踪log日志</p><h2 id="aureport"><a href="#aureport" class="headerlink" title="aureport"></a>aureport</h2><p>对于一个默认的、没有定义审计规则的系统，其实还是会记录一些东西的，我们可用<code>aureport -i</code>命令查看总览，使用-x、-l、-f、-c、-u、-p、-t可以查看各类记录的具体信息，默认情况下会对账号修改（passwd、usermod）、用户登录（图形界面的登录、远程登录）、配置修改等信息进行记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">aureport -u   <span class="comment">#对于用户在系统运行命令的生成的报告</span></span><br><span class="line">aureport -f   <span class="comment">#生成一个文件相关event的日志报告</span></span><br><span class="line">aureport -x   <span class="comment">#从可执行的角度去查看audit log</span></span><br><span class="line">aureport -s   <span class="comment">#system call的报告</span></span><br><span class="line">aureport -p   <span class="comment">#对于进程所有event的信息</span></span><br><span class="line">aureport -e   <span class="comment">#event事件列表</span></span><br><span class="line">aureport --failed   <span class="comment">#针对失败的event的统计，如果统计成功的用aureport --success</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -<span class="keyword">if</span> /var/<span class="built_in">log</span>/audit/audit.log   <span class="comment">#-if指定一个audit log文件,统计它的总体的log报告</span></span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Linux01/image-20200514142544822.png"  alt="image-20200514142544822"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -l -<span class="keyword">if</span> /var/<span class="built_in">log</span>/audit/audit.log   <span class="comment">#统计log文件用户登录信息，可用 -ts 14:00 -te 15:00指定统计时间范围</span></span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Linux01/image-20200514142505369.png"  alt="image-20200514142505369"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -l -i  <span class="comment">#用户登录事件生成的报告</span></span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Linux01/image-20200514143202236.png"  alt="image-20200514143202236"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aureport -t   <span class="comment">#查看audit log文件包含日志的起止时间</span></span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Linux01/image-20200514143301294.png"  alt="image-20200514143301294"></p><h2 id="ausearch"><a href="#ausearch" class="headerlink" title="ausearch"></a>ausearch</h2><p><code>aureport</code>帮助我们生成总体的日志总结， 如果我们对特定的event感兴趣，我们可以通过<code>ausearch</code>去过滤想要的日志。</p><p><code>ausearch - option -if myfile  #可以指定特定的日志文件进行分析， 通过加上&quot;-i&quot;可以将数据格式的，转化成可读的文本格式，比如user ID 和ASCII 码形式的cmd。</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ausearch -a 2984   <span class="comment">#搜寻当期audit服务中event ID等于2984的log</span></span><br><span class="line">ausearch -m    <span class="comment">#按消息类型查找</span></span><br><span class="line">ausearch -ul   <span class="comment">#按登陆ID查找</span></span><br><span class="line">ausearch -ua   <span class="comment">#按uid和euid查找</span></span><br><span class="line">ausearch -ui   <span class="comment">#按uid查找</span></span><br><span class="line">ausearch -ue   <span class="comment">#按euid查找</span></span><br><span class="line">ausearch -ga   <span class="comment">#按gid和egid查找</span></span><br><span class="line">ausearch -gi   <span class="comment">#按gid查找</span></span><br><span class="line">ausearch -ge   <span class="comment">#按egid查找</span></span><br><span class="line">ausearch -c    <span class="comment">#按cmd查找</span></span><br><span class="line">ausearch -x    <span class="comment">#按exe查找</span></span><br><span class="line">ausearch -sc   <span class="comment">#按syscall查找</span></span><br><span class="line">ausearch -p    <span class="comment">#按pid查找</span></span><br><span class="line">ausearch -sv   <span class="comment">#按syscall的返回值查找（yes/no）</span></span><br><span class="line">ausearch -f    <span class="comment">#按文件名查找</span></span><br><span class="line">ausearch -tm   <span class="comment">#按连接终端查找(term/ssh/tty)</span></span><br><span class="line">ausearch -hn   <span class="comment">#按主机名查找</span></span><br><span class="line">ausearch -k    <span class="comment">#按特定的key值查找</span></span><br><span class="line">ausearch -w    <span class="comment">#按在audit rule设定的字符串查找</span></span><br></pre></td></tr></table></figure><h2 id="autrace"><a href="#autrace" class="headerlink" title="autrace"></a>autrace</h2><p>使用<code>autrace</code>命令跟踪指定进程，并将跟踪的结果写入日志文件之中。<code>autrace</code>生成的log会存放在<code>/var/log/audit/audit.log</code>。 当用<code>autrace</code>去跟踪一个进程时，为了保证避免<code>autrace</code>与之前<code>audit rule</code>生成的日志冲突，使用<code>auditctl -D</code>去停止所有的audit log, 当<code>autrace</code>结束后，使用<code>systemctl restart auditd</code>重启audit服务。</p><h1 id="audit记录内容字段信息"><a href="#audit记录内容字段信息" class="headerlink" title="audit记录内容字段信息"></a><strong>audit记录内容字段信息</strong></h1><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>Type</td><td>类型</td></tr><tr><td>msg</td><td>时间戳</td></tr><tr><td>success</td><td>成功/失败</td></tr><tr><td>pid</td><td>进程 id</td></tr><tr><td>uid</td><td>对应进程的所有者ID</td></tr><tr><td>auid</td><td>被审计的用户id，取决于登录状态</td></tr><tr><td>ses</td><td>进程的session ID</td></tr><tr><td>exe</td><td>进程的执行文件的路径</td></tr><tr><td>name</td><td>具体被执行的路径或文件信息</td></tr><tr><td>comm</td><td>对应了进程执行的命令</td></tr></tbody></table><h1 id="syslog-系统日志"><a href="#syslog-系统日志" class="headerlink" title="syslog 系统日志"></a><strong>syslog 系统日志</strong></h1><table><thead><tr><th align="left">日志文件</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">/var/log/wtmp</td><td align="left">记录每个用户登录次数和登录时间(二进制文件，使用last查看)</td></tr><tr><td align="left">/var/log/btmp</td><td align="left">记录用户错误登录信息(二进制文件，使用lastb命令查看)</td></tr><tr><td align="left">/var/log/utmp</td><td align="left">记录当前已登录用户信息(二进制文件，使用w,who,users等查看)</td></tr><tr><td align="left">/var/log/lastlog</td><td align="left">记录用户最后一次登录时间信息(二进制文件，使用lastlog查看)</td></tr><tr><td align="left">/var/log/message</td><td align="left">系统标准错误日志信息（大多数产生的错误信息都在其中）、非内核产生的引导信息（如系统初始化信息）、各子系统产生的信息</td></tr><tr><td align="left">/var/log/secure</td><td align="left">与安全相关的信息(如用户登录、切换用户、修改密码)</td></tr><tr><td align="left">/var/log/maillogs</td><td align="left">邮件系统产生的信息</td></tr></tbody></table><h2 id="syslog-系统日志记录内容字段信息"><a href="#syslog-系统日志记录内容字段信息" class="headerlink" title="syslog 系统日志记录内容字段信息"></a><strong>syslog 系统日志记录内容字段信息</strong></h2><p>各个日志文件记录的内容不相同，总体来说可以记录用户名、时间、类型、内容、结果等信息。</p>]]></content>
      
      
      <categories>
          
          <category> 等保2.0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 日志审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle数据库保密性和完整性配置测试</title>
      <link href="/2020/05/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E5%AF%86%E6%80%A7%E5%92%8C%E5%AE%8C%E6%95%B4%E6%80%A7%E9%85%8D%E7%BD%AE%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/05/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E5%AF%86%E6%80%A7%E5%92%8C%E5%AE%8C%E6%95%B4%E6%80%A7%E9%85%8D%E7%BD%AE%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="oracle-数据库远程连接抓包测试"><a href="#oracle-数据库远程连接抓包测试" class="headerlink" title="oracle 数据库远程连接抓包测试"></a>oracle 数据库远程连接抓包测试</h3><p>通过wireshare抓取oracle 11g连接数据包</p><p>设置wireshark过滤条件</p><p>ip.addr eq 192.168.0.133 and tns</p><p>测试发现数据明文传输的，未加密。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/oracle11g/image-20200512222939809.png"  alt="image-20200512222939809"></p><h3 id="设置oracle-11g-连接加密"><a href="#设置oracle-11g-连接加密" class="headerlink" title="设置oracle 11g 连接加密"></a>设置oracle 11g 连接加密</h3><p>理论上需要在数据库server端和oracle客户端都修改sqlnet.ora文件，但因为client端默认传输加密级别是ACCEPTED，默认一致性校验级别是ACCEPTED，所以只需要在服务器端设置如下参数就可以打开传输加密和一致性校验功能，而不需要再对client端的sqlnet.ora进行设置。</p><h4 id="windows服务端设置方法"><a href="#windows服务端设置方法" class="headerlink" title="windows服务端设置方法"></a>windows服务端设置方法</h4><p>打开C:\app\user\product\11.2.0\dbhome_2\NETWORK\ADMIN\sqlnet.ora</p><h4 id="Linux服务端设置方法"><a href="#Linux服务端设置方法" class="headerlink" title="Linux服务端设置方法"></a>Linux服务端设置方法</h4><p>find ./ -name sqlnet.ora //搜索sqlnet.ora文件，只要sqlnet.ora在\NETWORK\ADMIN\路径就是对应要修改的文件位置</p><h4 id="加密连接设置方法"><a href="#加密连接设置方法" class="headerlink" title="加密连接设置方法"></a>加密连接设置方法</h4><p>在sqlnet.ora文件中添加下列参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SQLNET.ENCRYPTION_SERVER &#x3D; REQUIRED          ----加密级别</span><br><span class="line">SQLNET.ENCRYPTION_TYPES_SERVER &#x3D; RC4_256     ----加密算法</span><br><span class="line">SQLNET.CRYPTO_CHECKSUM_SERVER &#x3D; REQUIRED     ----完整性校验</span><br><span class="line">SQLNET.CRYPTO_CHECKSUM_TYPES_SERVER &#x3D; SHA1   ----完整性算法</span><br></pre></td></tr></table></figure><h4 id="可以设置的加密算法"><a href="#可以设置的加密算法" class="headerlink" title="可以设置的加密算法"></a>可以设置的加密算法</h4><table><thead><tr><th>加密算法名称</th><th>加密算法</th></tr></thead><tbody><tr><td>RC4 256-bit key</td><td>RC4_256</td></tr><tr><td>RC4 128-bit key</td><td>RC4_128</td></tr><tr><td>RC4 56-bit key</td><td>RC4_56</td></tr><tr><td>RC4 40-bit key</td><td>RC4_40</td></tr><tr><td>AES 256-bit key</td><td>AES256</td></tr><tr><td>AES 192-bit key</td><td>AES192</td></tr><tr><td>AES 128-bit key</td><td>AES128</td></tr><tr><td>3-key 3DES</td><td>3DES168</td></tr><tr><td>2-key 3DES</td><td>3DES112</td></tr><tr><td>DES 56-bit key</td><td>DES</td></tr><tr><td>DES 40-bit key</td><td>DES40</td></tr></tbody></table><h4 id="可以设置的完整性算法"><a href="#可以设置的完整性算法" class="headerlink" title="可以设置的完整性算法"></a>可以设置的完整性算法</h4><table><thead><tr><th>完整性算法名称</th><th>完整性算法</th></tr></thead><tbody><tr><td>SHA-1</td><td>SHA1</td></tr></tbody></table><h4 id="sqlnet-ora文件服务端完整设置"><a href="#sqlnet-ora文件服务端完整设置" class="headerlink" title="sqlnet.ora文件服务端完整设置"></a><strong>sqlnet.ora文件服务端完整设置</strong></h4><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/oracle11g/image-20200512232327781.png"  alt="image-20200512232327781"></p><h4 id="重新启动oracle"><a href="#重新启动oracle" class="headerlink" title="重新启动oracle"></a>重新启动oracle</h4><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/oracle11g/image-20200512232438287.png"  alt="image-20200512232438287"></p><h3 id="抓包测试连接是否加密"><a href="#抓包测试连接是否加密" class="headerlink" title="抓包测试连接是否加密"></a>抓包测试连接是否加密</h3><p>打开wireshark，设置抓取网卡开始抓包，使用工具连接数据库，进行sql语句查询。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/oracle11g/image-20200512233721950.png"  alt="image-20200512233721950"></p><p>设置wireshark过滤条件ip.addr eq 192.168.0.133 and tns</p><p>抓包完成，分析流发现数据库远程传输的数据已经被加密了</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/oracle11g/image-20200512234046481.png"  alt="image-20200512234046481"></p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/oracle11g/image-20200512234012669.png"  alt="image-20200512234012669"></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://docs.oracle.com/cd/E11882_01/network.112/e40393/asoconfg.htm#ASOAG9599" target="_blank" rel="noopener">https://docs.oracle.com/cd/E11882_01/network.112/e40393/asoconfg.htm#ASOAG9599</a></p>]]></content>
      
      
      <categories>
          
          <category> 等保2.0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 完整性 </tag>
            
            <tag> 保密性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双向身份验证机制</title>
      <link href="/2020/04/29/%E5%8F%8C%E5%90%91%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E6%9C%BA%E5%88%B6/"/>
      <url>/2020/04/29/%E5%8F%8C%E5%90%91%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="双向身份验证机制"><a href="#双向身份验证机制" class="headerlink" title="双向身份验证机制"></a>双向身份验证机制</h3><p>管理终端和云计算平台之间应建立双向身份验证机制</p><h3 id="典型案例"><a href="#典型案例" class="headerlink" title="典型案例"></a>典型案例</h3><p>阿里云的<a href="https://www.alibabacloud.com/help/zh/doc-detail/28627.htm" target="_blank" rel="noopener">访问控制</a>RAM（Resource Access Management）服务</p><p>Ram 是主账户授权认证，基于用户角色授权后基于api访问云服务资源时，通过访问密钥accesskey进行认证，认证资源后，还会有一次阿里云临时安全令牌（Security Token Service，STS）的认证，就可以管理资源了。</p><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>彼此之间的互相认证，A B间的双向认证需要C去做核验。</p><h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><p>一般基于证书。如，CA证书、基于https的证书</p><p>客户端被认证通过ca证书实现，服务器端认证通过https实现</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://help.aliyun.com/document_detail/163277.html?spm=5176.10695662.1996646101.searchclickresult.26691487v65ZaR&amp;aly_as=5Jz9HGTEx" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/163277.html?spm=5176.10695662.1996646101.searchclickresult.26691487v65ZaR&amp;aly_as=5Jz9HGTEx</a></p><p><a href="https://help.aliyun.com/document_detail/28756.html" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/28756.html</a></p><p><a href="https://help.aliyun.com/document_detail/160093.html?spm=5176.10695662.1996646101.searchclickresult.466b2721miKztv&amp;aly_as=TgpMEhjh9" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/160093.html?spm=5176.10695662.1996646101.searchclickresult.466b2721miKztv&amp;aly_as=TgpMEhjh9</a></p><p><a href="https://www.jianshu.com/p/2b2d1f511959?utm_campaign=haruki" target="_blank" rel="noopener">https://www.jianshu.com/p/2b2d1f511959?utm_campaign=haruki</a></p><p><a href="https://www.freebuf.com/company-information/207267.html" target="_blank" rel="noopener">https://www.freebuf.com/company-information/207267.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 等保2.0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 身份鉴别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库保密性技术实现措施</title>
      <link href="/2020/04/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E5%AF%86%E6%80%A7%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E6%8E%AA%E6%96%BD/"/>
      <url>/2020/04/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E5%AF%86%E6%80%A7%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E6%8E%AA%E6%96%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Oracle-透明数据加密-TED"><a href="#Oracle-透明数据加密-TED" class="headerlink" title="Oracle 透明数据加密(TED)"></a>Oracle 透明数据加密(TED)</h1><p><a href="http://www.oracle.com/technetwork/cn/database/options/advanced-security/index-098149-zhs.html?ssSourceSiteId=otnen" target="_blank" rel="noopener">Oracle Advanced Security</a> 透明数据加密 (TDE) 通过在数据库层执行静止数据加密，阻止可能的攻击者绕过数据库直接从存储读取敏感信息。经过数据库身份验证的应用和用户可以继续透明地访问应用数据（不需要更改应用代码或配置），而尝试读取表空间文件中的敏感数据的 OS 用户以及尝试读取磁盘或备份信息的不法之徒将不允许访问明文数据。</p><h2 id="可与-TDE-一同使用的加密算法"><a href="#可与-TDE-一同使用的加密算法" class="headerlink" title="可与 TDE 一同使用的加密算法"></a>可与 TDE 一同使用的加密算法</h2><p>TDE 支持 AES256、AES192（列加密默认算法）、AES128（表空间加密默认算法）和 3DES168。</p><h2 id="TDE-加密后数据在网络传输过程不加密"><a href="#TDE-加密后数据在网络传输过程不加密" class="headerlink" title="TDE 加密后数据在网络传输过程不加密"></a>TDE 加密后数据在网络传输过程不加密</h2><p>使用 TDE 加密后的数据在从数据库文件中读回时会被解密。因此，如果在网络上传输该数据，它将处于明文状态。不过，客户可以使用 Oracle 的网络加密解决方案（<a href="http://apex.oracle.com/pls/apex/f?p=44785:24:3597841083341353::NO:24:P24_CONTENT_ID,P24_PREV_PAGE:4267,2" target="_blank" rel="noopener">示例</a>）对这些数据进行加密，该方案和 TDE 一同包含在 Oracle Advanced Security 选件中。Oracle 的网络加密解决方案可以对通过 SQL*Net 与数据库往来传输的所有数据进行加密。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.oracle.com/technetwork/cn/tutorials/tde-096772-zhs.html" target="_blank" rel="noopener">Oracle Database 11g 中使用透明数据库加密</a></p><p><a href="https://www.oracle.com/technetwork/cn/topics/security/tde-faq-099527-zhs.html" target="_blank" rel="noopener">透明数据加密 (TDE)常见问题解答</a></p><h1 id="Oracle-数据网络传输加密"><a href="#Oracle-数据网络传输加密" class="headerlink" title="Oracle 数据网络传输加密"></a>Oracle 数据网络传输加密</h1><h2 id="客户端连接数据库传输加密"><a href="#客户端连接数据库传输加密" class="headerlink" title="客户端连接数据库传输加密"></a>客户端连接数据库传输加密</h2><p>客户端和数据库服务器之间数据传输是明文的，通过wireshark抓包工具可以看到，不管是客户端的请求sql（request sql），还是服务器的应答数据（response data），都是明文传输的，在一些特殊的场景下是不安全的，因此，为了传输保密性可以使用oracle自带的安全组件，实现数据加密传输。</p><h3 id="客户端存在两种模式"><a href="#客户端存在两种模式" class="headerlink" title="客户端存在两种模式"></a>客户端存在两种模式</h3><p>1、通过oracle客户端软件连接数据库</p><p>2、通过jdbc驱动连接oracle数据库</p><h3 id="通过oracle客户端软件连接数据库情况"><a href="#通过oracle客户端软件连接数据库情况" class="headerlink" title="通过oracle客户端软件连接数据库情况"></a>通过oracle客户端软件连接数据库情况</h3><p>启用传输加密和校验的主要方法是通过服务器端和客户端的sqlnet.ora文件实现。</p><p><strong>配置如下</strong></p><p>理论上需要在数据库server端和oracle客户端都修改sqlnet.ora文件，但因为client端默认传输加密级别是ACCEPTED，默认一致性校验级别是ACCEPTED，所以只需要在服务器端设置如下参数就可以打开传输加密和一致性校验功能，而不需要再对client端的sqlnet.ora进行设置。</p><p>在Oracle服务器端/u01/app/oracle/product/11.2.0/db_1/network/admin下的sqlnet.ora文件中加入下面配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SQLNET.ENCRYPTION_SERVER = REQUIRED          ----加密级别</span><br><span class="line">SQLNET.ENCRYPTION_TYPES_SERVER = RC4_256     ----加密算法</span><br><span class="line">SQLNET.CRYPTO_CHECKSUM_SERVER = REQUIRED     ----一致性能校验</span><br></pre></td></tr></table></figure><h3 id="通过jdbc驱动连接oracle数据库情况"><a href="#通过jdbc驱动连接oracle数据库情况" class="headerlink" title="通过jdbc驱动连接oracle数据库情况"></a>通过jdbc驱动连接oracle数据库情况</h3><p>大体格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());</span><br><span class="line">Properties props = new Properties();</span><br><span class="line">props.put(<span class="string">"oracle.net.encryption_client"</span>, <span class="string">"accepted"</span>);</span><br><span class="line">props.put(<span class="string">"oracle.net.encryption_types_client"</span>, <span class="string">"RC4_128"</span>);</span><br><span class="line">props.put(<span class="string">"oracle.net.crypto_checksum_client"</span>, <span class="string">"REQUIRED"</span>);   //此行根据官方文档写，未作验证</span><br><span class="line">props.put(<span class="string">"oracle.net.crypto_checksum_types_client"</span>,<span class="string">"MD5"</span>);   //此行根据官方文档格式写，未作验证</span><br><span class="line">props.put(<span class="string">"user"</span>, <span class="string">"XXX"</span>); props.put(<span class="string">"password"</span>, <span class="string">"YYY"</span>); Connection conn = DriverManager.getConnection(<span class="string">"jdbc:oracle:thin:@myhost:1521:mySID"</span>, props);</span><br></pre></td></tr></table></figure><h2 id="服务器上配置网络数据加密"><a href="#服务器上配置网络数据加密" class="headerlink" title="服务器上配置网络数据加密"></a>服务器上配置网络数据加密</h2><p>要在Oracle数据库服务器上配置网络数据加密，请执行以下步骤：</p><p>1、在操作系统提示符下输入netmgr。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[oracle@host01 ~]$ netmgr</span><br></pre></td></tr></table></figure><p>2、显示“ Oracle Net Manager欢迎”页面。展开本地。</p><p>3、选择Profile。在右边选项菜单中选择“ Oracle Advanced Security”。</p><p>4、单击加密选项卡“Encruption”。</p><p>5、验证“Encruption”字段是否设置为“SERVER”。在“Encruption Type”菜单中选择“required”。在“Encruption Seed”字段中输入少于70个随机字符。通过在“Available Methods”列表中突出显示该加密方法，然后单击&gt;将其移动到“Selected Methods”列表中，来选择加密方法。</p><p>6、菜单栏选择file-&gt;Save Network Configuration以保存更改。</p><p>7、菜单栏选择file-&gt;Exit 退出Oracle Net Manager。</p><h2 id="性能影响"><a href="#性能影响" class="headerlink" title="性能影响"></a>性能影响</h2><p>加密和解密就势必会占用一定的性能资源，但影响不大，下图是一个测试结果，摘自<a href="http://www.orafaq.com/wiki/Network_Encryption" target="_blank" rel="noopener">http://www.orafaq.com/wiki/Network_Encryption</a></p><table><thead><tr><th>Algorithm</th><th>None</th><th></th><th>MD5</th><th></th><th align="center">SHA-1</th><th></th></tr></thead><tbody><tr><td>Time</td><td>Time</td><td>%None</td><td>Time</td><td>%None</td><td align="center">Time</td><td>%None</td></tr><tr><td>None</td><td>79.6 s</td><td></td><td>80.5 s</td><td>101%</td><td align="center">82.4 s</td><td>104%</td></tr><tr><td>DES</td><td>104.7 s</td><td>132%</td><td>107.1 s</td><td>135%</td><td align="center">108.2 s</td><td>136%</td></tr><tr><td>3DES168</td><td>151.8 s</td><td>191%</td><td>153.9 s</td><td>193%</td><td align="center">155.6 s</td><td>196%</td></tr><tr><td>AES128</td><td>88.8 s</td><td>112%</td><td>90.5 s</td><td>114%</td><td align="center">92.1 s</td><td>116%</td></tr><tr><td>AES256</td><td>91.8 s</td><td>115%</td><td>93.5 s</td><td>117%</td><td align="center">94.2 s</td><td>118%</td></tr><tr><td>RC4_128</td><td>81.6 s</td><td>103%</td><td>82.5 s</td><td>104%</td><td align="center">85.0 s</td><td>107%</td></tr><tr><td>RC4_256</td><td>81.7 s</td><td>103%</td><td>82.8 s</td><td>104%</td><td align="center">85.0 s</td><td>107%</td></tr></tbody></table><h2 id="参考文档-1"><a href="#参考文档-1" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://docs.oracle.com/cd/B19306_01/network.102/b14268/asoconfg.htm#BBJBIECD" target="_blank" rel="noopener">http://docs.oracle.com/cd/B19306_01/network.102/b14268/asoconfg.htm#BBJBIECD</a></p><p><a href="http://docs.oracle.com/cd/B19306_01/network.102/b14268/asojbdc.htm#i1006209" target="_blank" rel="noopener">http://docs.oracle.com/cd/B19306_01/network.102/b14268/asojbdc.htm#i1006209</a></p><p><a href="http://www.orafaq.com/wiki/Network_Encryption" target="_blank" rel="noopener">http://www.orafaq.com/wiki/Network_Encryption</a></p><p><a href="http://www.toadworld.com/platforms/oracle/w/wiki/1719.sqlnet-ora-parameters" target="_blank" rel="noopener">http://www.toadworld.com/platforms/oracle/w/wiki/1719.sqlnet-ora-parameters</a> </p><p><a href="https://www.cnblogs.com/KQNLL/p/8626435.html" target="_blank" rel="noopener">https://www.cnblogs.com/KQNLL/p/8626435.html</a></p><h1 id="SQL-Server-透明数据加密（TDE）"><a href="#SQL-Server-透明数据加密（TDE）" class="headerlink" title="SQL Server 透明数据加密（TDE）"></a>SQL Server 透明数据加密（TDE）</h1><p>在SQL Server2000和以前的版本，是不支持加密的。所有的加密操作都需要在程序中完成。这导致一个问题，数据库中加密的数据仅仅是对某一特定程序有意义，而另外的程序如果没有对应的解密算法，则数据变得毫无意义。</p><p>到了SQL Server2005，引入了列级加密。使得加密可以对特定列执行，这个过程涉及4对加密和解密的内置函数</p><p>SQL Server 2008时代，则引入的了透明数据加密（TDE），所谓的透明数据加密，就是加密在数据库中进行，但从程序的角度来看就好像没有加密一样，和列级加密不同的是，TDE加密的级别是整个数据库。使用TDE加密的数据库文件或备份在另一个没有证书的实例上是不能附加或恢复的。</p><p>数据库文件加密在页面级执行。 已加密数据库中的页在写入磁盘之前会进行加密，在读入内存时会进行解密。 TDE 不会增加已加密数据库的大小。</p><p>启用 TDE 时，应该立即备份证书和与证书相关联的私钥。 如果证书变为不可用，或者如果必须在另一台服务器上还原或附加数据库，则必须同时具有证书和私钥的备份，否则将无法打开该数据库。 即使不再对数据库启用 TDE，也应该保留加密证书。 即使数据库未加密，事务日志的某些部分仍可能保持受到保护，但在执行数据库的完整备份前，对于某些操作可能需要证书。 超过过期日期的证书仍可以用于通过 TDE 加密和解密数据。</p><h2 id="参考文档-2"><a href="#参考文档-2" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.microsoft.com/zh-cn/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15</a></p><h1 id="SQL-Server-数据库加密连接"><a href="#SQL-Server-数据库加密连接" class="headerlink" title="SQL Server 数据库加密连接"></a>SQL Server 数据库加密连接</h1><p>SQL Server 可以使用传输层安全性 (TLS) 对通过网络在 SQL Server 实例与客户端应用程序之间传输的数据进行加密。 TLS 加密在协议层执行，并可用于所有支持的 SQL Server 客户端。 客户端连接请求加密时，TLS 可用于服务器验证。 如果 SQL Server 实例在某个计算机上运行，该计算机已分配有一个由公共证书颁发机构颁发的证书，则计算机的标识和 SQL Server 实例由受信任的根证书颁发机构的证书链担保。 这种服务器验证需要对运行客户端应用程序的计算机进行配置，使其信任服务器使用的证书的根证书颁发机构。 也可以使用带有自签名的证书进行加密，但是自签名证书只能提供有限的保护。 TLS 使用的加密级别是 40 位还是 128 位，取决于应用程序和数据库计算机上运行的 Microsoft Windows 操作系统版本。</p><h2 id="参考文档-3"><a href="#参考文档-3" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.microsoft.com/zh-cn/sql/database-engine/configure-windows/enable-encrypted-connections-to-the-database-engine?view=sql-server-ver15" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/sql/database-engine/configure-windows/enable-encrypted-connections-to-the-database-engine?view=sql-server-ver15</a></p>]]></content>
      
      
      <categories>
          
          <category> 等保2.0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 完整性 </tag>
            
            <tag> 保密性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01 Python基础</title>
      <link href="/2020/04/09/01%20Python%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/04/09/01%20Python%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在人生中取得成功， 与其说靠天才与机会， 不如说靠专注与毅力。 ——C. W. Wendte</span><br></pre></td></tr></table></figure><p>安装<a href="https://code.visualstudio.com/docs/?dv=win" target="_blank" rel="noopener">VScode</a></p><p>设置为中文语言环境，快捷键Ctrl+Shift+P，搜索框中输入configure language</p><h5 id="1、基础"><a href="#1、基础" class="headerlink" title="1、基础"></a>1、基础</h5><p>注释  # ，任何存在#号右侧的文字，注释可以单行，也可以在代码行后面接注释</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410134602552.png"  alt="image-20200410134602552"></p><h5 id="2、字面常量"><a href="#2、字面常量" class="headerlink" title="2、字面常量"></a>2、字面常量</h5><p>如“1、2.2、this is a book、这是一本书”，字面常量字面意义上的值或是内容，因为它的值不能被改变。</p><h5 id="3、数字"><a href="#3、数字" class="headerlink" title="3、数字"></a>3、数字</h5><p>数字主要分为两种类型——整数（ Integers） 与浮点数（ Floats） ，有关整数的例子即 2 ， 它只是一个整数。有关浮点数（ Floating Point Numbers， 在英文中也会简写为 floats ） 的例子是 3.23 或<br>52.3E-4 。 其中， E 表示 10 的幂。 在这里， 52.3E-4 表示 52.3 * 10^-4。</p><h5 id="4、字符串"><a href="#4、字符串" class="headerlink" title="4、字符串"></a>4、字符串</h5><p>一串字符串（ String） 是 字符（ Characters） 的 序列（Sequence） 。 基本上， 字符串就是一串词汇。</p><h5 id="5、单引号"><a href="#5、单引号" class="headerlink" title="5、单引号"></a>5、单引号</h5><p>你可以使用单引号来指定字符串， 例如 ‘将我这样框进来’ 或 ‘Quote me on this’ 。所有引号内的空间， 诸如空格与制表符， 都将按原样保留。</p><h5 id="6、双引号"><a href="#6、双引号" class="headerlink" title="6、双引号"></a>6、双引号</h5><p>被双引号包括的字符串和被单引号括起的字符串其工作机制完全相同。 例如 “你的名字是？ “ 或<br>“What’s your name?” 。</p><h5 id="7、三引号"><a href="#7、三引号" class="headerlink" title="7、三引号"></a>7、三引号</h5><p>你可以通过使用三个引号—— “”” 或 ‘’’ 来指定多行字符串。 你可以在三引号之间自由地<br>使用单引号与双引号。 来看看这个例子：</p><h5 id="8、格式化方法"><a href="#8、格式化方法" class="headerlink" title="8、格式化方法"></a>8、格式化方法</h5><p>从其他信息中构建字符串， 这正是 format() 方法大有用武之地的地方。</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410141817799.png"  alt="image-20200410141817799"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">输入</span><br><span class="line">name=<span class="string">"haha"</span></span><br><span class="line">age=<span class="number">11</span></span><br><span class="line">print(<span class="string">'姓名是&#123;&#125;,年龄&#123;&#125;'</span>.format(name,age))</span><br><span class="line">print(<span class="string">'年龄是&#123;1&#125;,姓名&#123;0&#125;'</span>.format(name,age))</span><br><span class="line">print(<span class="string">'姓名是'</span>+name+<span class="string">'，年龄'</span>+str(age))</span><br><span class="line"></span><br><span class="line">输出结果</span><br><span class="line">Hello</span><br><span class="line">World</span><br><span class="line">姓名是haha,年龄<span class="number">11</span></span><br><span class="line">年龄是<span class="number">11</span>,姓名haha</span><br><span class="line">姓名是haha，年龄<span class="number">11</span></span><br></pre></td></tr></table></figure><p>Python 中 format 方法所做的事情便是将每个参数值替换至格式所在的位置。 这之中可以有<br>更详细的格式， 例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">对于浮点数 <span class="string">'0.333'</span> 保留小数点(.)后三位</span><br><span class="line"></span><br><span class="line">print(<span class="string">'&#123;0:.3f&#125;'</span>.format(<span class="number">3</span>/<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">使用下划线填充文本， 并保持文字处于中间位置</span><br><span class="line"></span><br><span class="line">使用 (^) 定义 <span class="string">'___hello___'</span>字符串长度为 <span class="number">11</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'&#123;0:_^11&#125;'</span>.format(<span class="string">'hello'</span>))</span><br><span class="line"></span><br><span class="line">基于关键词输出 <span class="string">'呵呵 wrote 简明的'</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'&#123;name&#125; wrote &#123;book&#125;'</span>.format(name=<span class="string">'呵呵'</span>, book=<span class="string">"简明的"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出结果</span><br><span class="line"><span class="number">1.500</span></span><br><span class="line">___hello___</span><br><span class="line">呵呵 wrote 简明的</span><br></pre></td></tr></table></figure><p>print 总是会以一个不可见的“新一行”字符（ \n ）结尾，防止打印换行符用end=’’指定其应以空白结尾，或者你通过 end 指定以空格结尾：end=’   ‘，或者end=’任何内容，，，，’</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410150602541.png"  alt="image-20200410150602541"></p><h5 id="9、转义序列"><a href="#9、转义序列" class="headerlink" title="9、转义序列"></a>9、转义序列</h5><p>如果你希望生成一串包含单引号（ ‘ ） 的字符串， 需通过 \ 来指定单引号： 要注意它可是反斜杠</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410152344187.png"  alt="image-20200410152344187"></p><p>指定一串双行字符串,一种方式即使用如前所述的三引号字符串， 或者可以使用一个表示新一行的转义序列—— \n 来表示新一行的开始。 下面是一个例子：’This is the first line\nThis is the second line’</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410153001415.png"  alt="image-20200410153001415"></p><p>另一个大有用处的转义序列是制表符： \t</p><p>在一个字符串中， 一个放置在末尾的反斜杠表示字符串将在下一行继续， 但不会添加新的一行。 如下：</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410153531631.png"  alt="image-20200410153531631"></p><h5 id="10、原始字符串"><a href="#10、原始字符串" class="headerlink" title="10、原始字符串"></a>10、原始字符串</h5><p>如果需要指定一些未经过特殊处理的字符串， 比如转义序列， 那么你需要在字符串前增加<br>r 或 R 来指定一个 原始（ Raw） 字符串 。 </p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410154315989.png"  alt="image-20200410154315989"></p><h5 id="11、变量"><a href="#11、变量" class="headerlink" title="11、变量"></a>11、变量</h5><p>如果只使用字面常量很快就会让人感到无聊——我们需要一些能够存储任何信息并且也能操<br>纵它们的方式。 这便是 变量（ Variables） 登场的时刻。 正如其名字所述那般， 变量的值是可<br>以变化的， 也就是说， 你可以用变量来存储任何东西。 变量只是你的计算机内存中用以存储<br>信息的一部分。 与文字常量不同， 你需要通过一些方式来访问这些变量， 因此， 你需要为它<br>们命名。</p><h5 id="12、标识符命名"><a href="#12、标识符命名" class="headerlink" title="12、标识符命名"></a>12、标识符命名</h5><p>变量是标识符的一个例子。 标识符（ Identifiers） 是为 某些东西 提供的给定名称。 在你命名<br>标识符时， 你需要遵守以下规则：</p><p>第一个字符必须是字母表中的字母（ 大写 ASCII 字符或小写 ASCII 字符或 Unicode 字<br>符） 或下划线（ _ ） 。<br>标识符的其它部分可以由字符（ 大写 ASCII 字符或小写 ASCII 字符或 Unicode 字符） 、<br>下划线（ _ ） 、 数字（ 0~9） 组成。<br>标识符名称区分大小写。 例如， myname 和 myName 并不等同。 要注意到前者是小写字<br>母 n 而后者是大写字母 N 。<br>有效 的标识符名称可以是 i 或 name_2_3 ， 无效 的标识符名称可能是2things ， this is spaced out ， my-name 和 &gt;a1b2_c3 。</p><h5 id="13、数据类型"><a href="#13、数据类型" class="headerlink" title="13、数据类型"></a>13、数据类型</h5><p>变量可以将各种形式的值保存为不同的数据类型（ Data Type） 。 基本的类型是我们已经讨论<br>过的数字与字符串。 在后面的章节中， 我们会了解如何通过 类（ Classes） 类创建我们自己<br>的类型。</p><h5 id="14、对象"><a href="#14、对象" class="headerlink" title="14、对象"></a>14、对象</h5><p>需要记住的是， Python 将程序中的任何内容统称为 对象（ Object） 。 这是一般意义上的说<br>法。 我们以“某某对象（ object） ”相称， 而非“某某东西（ something） ”。</p><p>针对面向对象编程语言用户的提示：<br>Python 是强（ Strongly） 面向对象的， 因为所有的一切都是对象， 包括数字、 字符串与<br>函数。</p><h5 id="16、使用变量与字面常量"><a href="#16、使用变量与字面常量" class="headerlink" title="16、使用变量与字面常量"></a>16、使用变量与字面常量</h5><p>变量只需被赋予某一值。 不需要声明或定义数据类型</p><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/ZOFOA/zofoa.github.io@latest/img/Python01/image-20200410161103062.png"  alt="image-20200410161103062"></p><h5 id="17、逻辑行与物理行"><a href="#17、逻辑行与物理行" class="headerlink" title="17、逻辑行与物理行"></a>17、逻辑行与物理行</h5><p>所谓物理行（ Physical Line） 是你在编写程序时 你所看到 的内容。 所谓逻辑行（ Logical<br>Line） 是 Python 所看到 的单个语句。 Python 会假定每一 物理行 会对应一个 逻辑行。</p><p>Python 之中暗含这样一种期望： Python 鼓励每一行使用一句独立语句从而使得代码更加可<br>读。例如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">5</span></span><br><span class="line">print(i)</span><br><span class="line"></span><br><span class="line">实际上等同于</span><br><span class="line">i = <span class="number">5</span>;</span><br><span class="line">print(i);</span><br><span class="line"></span><br><span class="line">同样可以看作</span><br><span class="line">i = <span class="number">5</span>; print(i);</span><br><span class="line"></span><br><span class="line">也与这一写法相同</span><br><span class="line">i = <span class="number">5</span>; print(i)</span><br></pre></td></tr></table></figure><h5 id="17、缩进"><a href="#17、缩进" class="headerlink" title="17、缩进"></a>17、缩进</h5><p>空白区 在 Python 中十分重要。 实际上， 空白区在各行的开头非常重要。 这被称作 缩进<br>（ Indentation） 。 在逻辑行的开头留下空白区（ 使用空格或制表符） 用以确定各逻辑行的缩<br>进级别， 而后者又可用于确定语句的分组。这意味着放置在一起的语句必须拥有相同的缩进。 每一组这样的语句被称为 块（ block） 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如何缩进</span><br><span class="line">使用四个空格来缩进。 这是来自 Python 语言官方的建议。 好的编辑器会自动为你完成这</span><br><span class="line">一工作。 请确保你在缩进中使用数量一致的空格， 否则你的程序将不会运行， 或引发不</span><br><span class="line">期望的行为。</span><br><span class="line">针对静态编程语言程序员的提示</span><br><span class="line">Python 将始终对块使用缩进， 并且绝不会使用大括号。 你可以通过运行 from</span><br><span class="line">__future__ import braces 来了解更多信息。</span><br></pre></td></tr></table></figure><h5 id="18、运算符与表达式"><a href="#18、运算符与表达式" class="headerlink" title="18、运算符与表达式"></a>18、运算符与表达式</h5><p>你所编写的大多数语句（ 逻辑行） 都包含了表达式（ Expressions） 。 一个表达式的简单例子<br>便是 2+3 。 表达式可以拆分成运算符（ Operators） 与操作数（ Operands）。例子中 2 和 3 就是操作数。</p><h5 id="19、控制流"><a href="#19、控制流" class="headerlink" title="19、控制流"></a>19、控制流</h5>]]></content>
      
      
      <categories>
          
          <category> Python编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二十几岁需要掌握的5种能力</title>
      <link href="/2020/03/24/%E4%BA%8C%E5%8D%81%E5%87%A0%E5%B2%81%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%845%E7%A7%8D%E8%83%BD%E5%8A%9B/"/>
      <url>/2020/03/24/%E4%BA%8C%E5%8D%81%E5%87%A0%E5%B2%81%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%845%E7%A7%8D%E8%83%BD%E5%8A%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>[TOC]</p><hr><h5 id="二十几岁需要掌握的5种能力"><a href="#二十几岁需要掌握的5种能力" class="headerlink" title="二十几岁需要掌握的5种能力"></a>二十几岁需要掌握的5种能力</h5><p>1、良好的<strong>表达能力</strong></p><blockquote><p>《情商高就是会说话》</p></blockquote><p>2、社交职称人脉的<strong>掌控能力</strong></p><blockquote><p>《气场》</p></blockquote><p>3、高效人际关系的<strong>沟通能力</strong></p><blockquote><p>《沟通的智慧》</p></blockquote><p>4、独立思考的<strong>学习能力</strong></p><blockquote><p>《思维风暴》</p></blockquote><p>5、坚定自我坚持不懈的<strong>执着能力</strong></p><blockquote><p>《熬得住出众，熬不住出局》</p></blockquote><h5 id="《方与圆》"><a href="#《方与圆》" class="headerlink" title="《方与圆》"></a>《方与圆》</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">方是 **做人之本**</span><br><span class="line"></span><br><span class="line">圆是 **处世之道**</span><br><span class="line"></span><br><span class="line">方是 **原则目标**</span><br><span class="line"></span><br><span class="line">圆是 **策略手段</span><br></pre></td></tr></table></figure><h5 id="当你的才华配不上你的梦想的时候"><a href="#当你的才华配不上你的梦想的时候" class="headerlink" title="当你的才华配不上你的梦想的时候"></a>当你的才华<strong>配不上你的梦想的时候</strong></h5><p>一定要放低梦想<strong>去追逐才华！</strong></p><p>当你的能力<strong>配不上你的消费的时候</strong></p><p>一定要降低消费<strong>去提升能力！</strong></p><p><strong>去学习 去进步 去进化</strong></p><p>与其降低你的开支，不如去尝试增加你的<br>收入，这就是我努力的理由。</p><h5 id="十大堕落的表现"><a href="#十大堕落的表现" class="headerlink" title="十大堕落的表现"></a>十大堕落的表现</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1、早晨从中午开始</span><br><span class="line"></span><br><span class="line">2、晚上12点以后才睡觉</span><br><span class="line"></span><br><span class="line">3、越来越懒</span><br><span class="line"></span><br><span class="line">《生活给你的一定是能能承受的》</span><br><span class="line"></span><br><span class="line">4、时间基本花在了电脑手机</span><br><span class="line"></span><br><span class="line">5、不管做什么事都没兴趣</span><br><span class="line"></span><br><span class="line">6、经常发呆 莫名烦躁</span><br><span class="line"></span><br><span class="line">《人生的谷底怎么走都向上》</span><br><span class="line"></span><br><span class="line">7、严重缺乏锻炼</span><br><span class="line"></span><br><span class="line">8、沉迷于游戏</span><br><span class="line"></span><br><span class="line">9、三餐饮食不均</span><br><span class="line"></span><br><span class="line">10、与家人缺少交流</span><br><span class="line"></span><br><span class="line">《别让人生输给了心情》</span><br></pre></td></tr></table></figure><h5 id="求知若饥-虚心若愚——乔布斯"><a href="#求知若饥-虚心若愚——乔布斯" class="headerlink" title="求知若饥 虚心若愚——乔布斯"></a>求知若饥 虚心若愚——乔布斯</h5><h5 id="坚持遇见更好的自己"><a href="#坚持遇见更好的自己" class="headerlink" title="坚持遇见更好的自己"></a>坚持遇见更好的自己</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">每一天</span><br><span class="line"></span><br><span class="line">1、早睡早起，保证7-8小时的睡眠</span><br><span class="line">2、花20-60分钟去阅读</span><br><span class="line">3、花20-40分钟去健身</span><br><span class="line">4、吃2个水果</span><br><span class="line">5、拍一张当天的照片</span><br><span class="line">6、至少走满5000步</span><br><span class="line">7、花15-30分钟护理你的皮肤</span><br><span class="line"></span><br><span class="line">每一周</span><br><span class="line"></span><br><span class="line">1、给父母打一次电话</span><br><span class="line">2、花3-12小时学习或者提升一门技能</span><br><span class="line">3、下一次厨，学会烹饪,可以让你更好的照顾自己</span><br><span class="line">4、花2-6个小时,参加一次有意义的活动</span><br><span class="line"></span><br><span class="line">每一月</span><br><span class="line"></span><br><span class="line">1、每个月看一次电影</span><br><span class="line">2、写一些文字记录，自己的思考或生活</span><br><span class="line">3、结识1位新的朋友</span><br><span class="line">4、读完一本书</span><br><span class="line"></span><br><span class="line">每一年</span><br><span class="line"></span><br><span class="line">1、来一场说走就走的旅行</span><br><span class="line">2、带上家人，做一次全面体检</span><br><span class="line">3、在远方的你，尽量多回几次家</span><br><span class="line">4、丢弃一些不需要的东西</span><br><span class="line">5、视自己经济能力，给父母一个大红包</span><br><span class="line">6、给自己一个奖励，什么都行</span><br><span class="line">7、做一次全面的年度总结和次年规划</span><br></pre></td></tr></table></figure><h5 id="女人要嫁就嫁给一个很温暖的男人"><a href="#女人要嫁就嫁给一个很温暖的男人" class="headerlink" title="女人要嫁就嫁给一个很温暖的男人"></a>女人要嫁就嫁给一个很温暖的男人</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">找一个会帮你擦干头发</span><br><span class="line">会低头给你系鞋带</span><br><span class="line">会吃你吃剩下的东西</span><br><span class="line">会在你来大姨妈的时候</span><br><span class="line">给你冲红糖水喝</span><br><span class="line">会牵着你的手过马路</span><br><span class="line">会在纪念日给你惊喜</span><br><span class="line">会把你介绍给所有的朋友</span><br><span class="line">会包容你的脾气</span><br><span class="line">会和你认错的人</span><br><span class="line">把你捧在手心里</span><br><span class="line">像日出日落一样陪着你</span><br></pre></td></tr></table></figure><h5 id="决定你人生上限的是你的自律"><a href="#决定你人生上限的是你的自律" class="headerlink" title="决定你人生上限的是你的自律"></a>决定你人生上限的是你的自律</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">身材好，说明你在嘴上自律。</span><br><span class="line">气质好，说明你在学习和修心方面自律。</span><br><span class="line">人缘好，说明你在脾气上自律。</span><br><span class="line">事业好，说明你在时间、精力、体力、心力很多方面都自律。</span><br><span class="line">自律，才能遇见更好的自己。</span><br></pre></td></tr></table></figure><h5 id="释迦牟尼说的一句话："><a href="#释迦牟尼说的一句话：" class="headerlink" title="释迦牟尼说的一句话："></a>释迦牟尼说的一句话：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“无论你遇见谁，他都是你生命该出现的人，绝非偶然，他一定会教会你一些什么”。</span><br></pre></td></tr></table></figure><h5 id="少女的祈祷"><a href="#少女的祈祷" class="headerlink" title="少女的祈祷"></a>少女的祈祷</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我想要花</span><br><span class="line">不是我告诉你我想要花</span><br><span class="line">所以你要送我花</span><br><span class="line">而是你想送我花</span><br><span class="line">所以我才要花</span><br></pre></td></tr></table></figure><h5 id="如果未尝过苦-自然也尝不出甜"><a href="#如果未尝过苦-自然也尝不出甜" class="headerlink" title="如果未尝过苦 自然也尝不出甜"></a>如果未尝过苦 自然也尝不出甜</h5><h5 id="幸福大概就是：你喜欢粘着的那个人，永远都不会嫌你烦。"><a href="#幸福大概就是：你喜欢粘着的那个人，永远都不会嫌你烦。" class="headerlink" title="幸福大概就是：你喜欢粘着的那个人，永远都不会嫌你烦。"></a>幸福大概就是：你喜欢粘着的那个人，永远都不会嫌你烦。</h5><h5 id="陪伴最重要"><a href="#陪伴最重要" class="headerlink" title="陪伴最重要"></a>陪伴最重要</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">陪在身边才是拥有，爱到习惯才会长久</span><br></pre></td></tr></table></figure><h5 id="喜欢和爱的区别"><a href="#喜欢和爱的区别" class="headerlink" title="喜欢和爱的区别"></a>喜欢和爱的区别</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">喜欢是红着脸 ，爱是红着眼。</span><br><span class="line"></span><br><span class="line">喜欢是我很快乐，爱是我想让你快乐。</span><br><span class="line"></span><br><span class="line">喜欢是想得到，爱是想保护。</span><br><span class="line"></span><br><span class="line">喜欢是心动，爱是心定。</span><br><span class="line"></span><br><span class="line">喜欢是一种天性，爱是一种忠诚。</span><br><span class="line"></span><br><span class="line">喜欢是靠嘴说，爱是靠行动去做。</span><br><span class="line"></span><br><span class="line">喜欢是初见不厌，爱是久处不厌。</span><br><span class="line"></span><br><span class="line">喜欢是想得到，爱是怕失去。</span><br><span class="line"></span><br><span class="line">喜欢是我把糖果拿地出来，我们一起吃；爱是我把糖果拿出来，我看着你吃。</span><br></pre></td></tr></table></figure><h5 id="人际交往中悟出的道理"><a href="#人际交往中悟出的道理" class="headerlink" title="人际交往中悟出的道理"></a>人际交往中悟出的道理</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">不喜欢麻烦别人的人，一般也不喜欢被别人麻烦。</span><br><span class="line"></span><br><span class="line">能花钱解决的事情，干万别用人情解决。</span><br><span class="line"></span><br><span class="line">不要关系好一点就口无遮拦。</span><br><span class="line"></span><br><span class="line">人前不应该说的话，背后也别说。</span><br><span class="line"></span><br><span class="line">初次见面时，一定要记住对方的名字。</span><br><span class="line"></span><br><span class="line">在在一个桌子上吃饭的人，不一定叫人脉；但是能互相交换资源的人，那一定是人脉。</span><br><span class="line"></span><br><span class="line">有钱才敢做真实的自己，没钱的话，只能做别人喜欢的自己。</span><br></pre></td></tr></table></figure><h5 id="三观最正的话"><a href="#三观最正的话" class="headerlink" title="三观最正的话"></a>三观最正的话</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">彩礼和嫁妆是两个家庭帮助一个</span><br><span class="line">新的家庭，而不是一个家庭给另一个</span><br><span class="line">家庭扶贫，这是我听过三观最正的话</span><br></pre></td></tr></table></figure><h5 id="提升口才的方法"><a href="#提升口才的方法" class="headerlink" title="提升口才的方法"></a>提升口才的方法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、每天要练习口部操，要练习绕口令。要练习你的气息，让你很好的去控制你的口腔和你的声音的状态。</span><br><span class="line"></span><br><span class="line">2、每天要去模仿一个高手说话的技巧，把他说话的方式提炼出他的语言逻辑，然后举一反三，去学习他的语言框架。</span><br><span class="line"></span><br><span class="line">3、每天要看书要做笔记，积累好词好句，还有它的表达方式。</span><br></pre></td></tr></table></figure><h5 id="写在清华墙上的七句话"><a href="#写在清华墙上的七句话" class="headerlink" title="写在清华墙上的七句话"></a>写在清华墙上的七句话</h5><p>1.我荒废的今日正是昨天殒身之人祈求的明天<br>2.请享受无法回避的痛苦<br>3.觉得自己为时已晚的时候恰恰是最早的时候<br>4.谁也不可能轻易成功它来自彻底的自我管理和毅力<br>5.现在流的口水，将成为明天的眼泪<br>6.今天不走，明天要跑<br>7.即使此刻对手也在不停地翻动书页</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>往昔不念 来日可期</title>
      <link href="/2019/04/25/1/"/>
      <url>/2019/04/25/1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="往昔不念，来日可期！"><a href="#往昔不念，来日可期！" class="headerlink" title="往昔不念，来日可期！"></a>往昔不念，来日可期！</h2><p>我突然间想通了，我们本不应该相遇的，就算再喜欢你 我也不要了，因为没有纠缠你的勇气了，也没有那份执着 放过你 就等于放过我自己。</p><p>我对你的温度，取决于你对我的态度。</p><p>如果给不了我想要的态度，请不要靠近我。</p><p>再见！</p><p>2020.08.22</p>]]></content>
      
      
      
        <tags>
            
            <tag> 来日可期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Windows内存取证 基础知识</title>
      <link href="/2019/04/22/CTF-Windows%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2019/04/22/CTF-Windows%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>本文主要介绍利用<strong><a href="https://www.volatilityfoundation.org/releases" target="_blank" rel="noopener">Volatility</a>内存取证工具</strong>对windows系统内存镜像进行分析。</p></blockquote><h2 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h2><p>内存取证是指通过对计算机<strong>物理内存</strong>和<strong>页面交换</strong>文件中进行<strong>查找</strong>、<strong>提取</strong>并进行<strong>分析</strong>，继而得到我们需要的证据的过程；可以形象的理解为将内存进程写入<strong>镜像文件</strong>，通过镜像文件查看之前内存进程的一些信息。</p><h2 id="取证工具"><a href="#取证工具" class="headerlink" title="取证工具"></a>取证工具</h2><ul><li><p>Volatility</p><p><a href="https://www.volatilityfoundation.org/releases" target="_blank" rel="noopener">Volatility</a>是一款开源的，基于<code>Python</code>开发的内存取证工具集，可以分析内存中的各种数据。<code>Volatility</code>支持对32位或64位<code>Wnidow</code>、<code>Linux</code>、<code>Mac</code>、<code>Android</code>操作系统的RAM数据进行提取与分析。</p></li><li><p>DumpIt</p><p><a href="https://qpdownload.com/dumpit/" target="_blank" rel="noopener">DumpIt</a> 是一款绿色免安装的 <code>windows</code> 内存镜像取证工具。利用它我们可以轻松地将一个系统的完整内存镜像下来，并用于后续的调查取证工作。下载后，直接双击运行 exe 文件，输入 y 并回车，软件就会在当前目录下保存内存镜像文件。</p></li><li><p>Procdump</p><p>Windows平台下的命令行工具，可以在指定的条件下生成dump文件，主要用于高<code>CPU</code>占用率的性能分析优化，程序停止响应的调试，<code>First chance</code>异常捕获等，还可以监视内存使用、结合系统性能计数器使用，更详细介绍见<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump" target="_blank" rel="noopener">官方网站</a>。</p><blockquote><p>这里只记录一下常用用法。</p></blockquote><p>  在命令提示符下procdump -?可以查看全部参数的说明</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这里列举几个常用的：</span><br><span class="line">-c/-cl: 监视CPU占用率阀值，-c为当CPU占用率高于该值时创建dump，-cl则在低于该值时创建dump。</span><br><span class="line">-u: 监视单核心的CPU占用率，与-c一起使用</span><br><span class="line">-s: 时间，以秒为单位，结合-c使用实现当连续N秒CPU占用高于某值时保存dump。</span><br><span class="line">-n: 设置数量，保存多个dump后才退出该程序。</span><br><span class="line">-h: 当进程中存在挂起窗口（不响应窗口消息）时创建dump。</span><br></pre></td></tr></table></figure></li></ul><h2 id="分析内存中隐藏的秘密"><a href="#分析内存中隐藏的秘密" class="headerlink" title="分析内存中隐藏的秘密"></a>分析内存中隐藏的秘密</h2><h3 id="获取内存镜像"><a href="#获取内存镜像" class="headerlink" title="获取内存镜像"></a>获取内存镜像</h3><p>通过<code>dumplt</code>获取了一台<code>Server 2003</code>服务器的内存镜像，内存镜像<code>notepad++</code>中有一些重要信息,我们需要获取重要数据。</p><p><img src="/" class="lazyload" data-src="https://i.loli.net/2019/04/23/5cbdf67dab668.png"  alt="Server 2003 内存镜像文件"></p><h3 id="使用Volatility对内存镜像进行分析"><a href="#使用Volatility对内存镜像进行分析" class="headerlink" title="使用Volatility对内存镜像进行分析"></a>使用Volatility对内存镜像进行分析</h3><ul><li><p><code>volatility</code><a href="https://github.com/volatilityfoundation/volatility/wiki/Command-Reference" target="_blank" rel="noopener">命令手册</a>，可访问该链接查看工具命令使用介绍。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">常用的命令：</span><br><span class="line"></span><br><span class="line">cmdline/cmdscan   列出历史cmd命令</span><br><span class="line">filescan          扫描文件，可配合grep使用</span><br><span class="line">netscan           扫描建立的连接和套接字，类似于netstat</span><br><span class="line">pslist/psscan     列出进程列表</span><br><span class="line">svcscan           扫描windows服务列表</span><br><span class="line">screenshot        显示GDI样式的截屏</span><br><span class="line">memdump           从内存dump进程的内存</span><br><span class="line">dumpfiles         从内存dump文件</span><br><span class="line">connscan          建立的地址池连接</span><br><span class="line">-h或者–<span class="built_in">help</span>       列举出所有可用的选项以及插件</span><br><span class="line">–info             打印出所有已经注册的对象(插件)</span><br></pre></td></tr></table></figure></li><li><p>进入1.raw文件所在目录，使用volatility获取镜像基本信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw imageinfo</span><br><span class="line">imageinfo命令：用于查看我们正在分析的内存样本的摘要信息。具体来说显示主机所使用的操作系统版本、服务包以及硬件结构(32位或64位)、页目录表的起始地址和该获取该内存镜像的时间等基本信息。</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://i.loli.net/2019/04/23/5cbdf8e1ec1dd.png"  alt="内存样本摘要信息"></p></li><li><p>使用pslist命令查看当前镜像运行的进程信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw pslist --profile=Win2003SP1x86</span><br><span class="line">pslist命令: 可以枚举系统中的进程，这条命令通过遍历PsActiveProcessHead指针指向的双向链表枚举当前内存中活跃的所有进程信息，主要包括偏移地址、进程ID号、父进程ID号、线程数量、句柄数量、进程会话ID号以及进程开始和退出的时间。</span><br><span class="line">pslist: 无法显示隐藏/终止进程。</span><br><span class="line">psscan: 输出的内容会比pslist多。</span><br><span class="line">pstree: 扫描进程，以进程树的形式出现。</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://i.loli.net/2019/04/23/5cbdf9d719d7d.png"  alt="内存镜像中进程信息"></p></li><li><p>查看cmd 输入的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP1x86 cmdscan</span><br><span class="line">cmdscan命令: 可以用来查看受害者系统上攻击者操作的最强大的命令之一，无论他们是否打开cmd.exe</span><br><span class="line">简单地说，您可以看到攻击者在命令提示符中键入的内容。</span><br></pre></td></tr></table></figure></li><li><p>查看可疑文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP1x86 filescan</span><br><span class="line">filescan命令: 扫描当前打开的文件。配合 dumpfile有意想不到的效果 dumpfiles -D .&#x2F; -Q</span><br><span class="line">查看文档、图片、桌面文件</span><br><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP2x86 filescan | grep &quot;doc\|docx\|rtf&quot;</span><br><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP2x86 filescan | grep &quot;jpg\|jpeg\|png\|tif\|gif\|bmp&quot;</span><br><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP2x86 filescan | grep &quot;Desktop&quot;</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://i.loli.net/2019/04/23/5cbdfbe93e9ad.png"  alt="内存镜像中部分打开的文件"></p></li><li><p>查看命令行输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP2x86 cmdline</span><br></pre></td></tr></table></figure></li><li><p>查看系统用户名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP2x86 printkey -K &quot;SAM\Domains\Account\Users\Names&quot;</span><br></pre></td></tr></table></figure></li><li><p>查看网络连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP2x86 netscan</span><br></pre></td></tr></table></figure></li><li><p>导出notepad++ 进程内存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volatility -f 1.raw --profile&#x3D;Win2003SP2x86 memdump -p 3324 --dump-dir&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://i.loli.net/2019/04/23/5cbe002f1503c.png"  alt="导出notepad++进程文件"></p></li></ul><h3 id="查看notepad-隐藏的重要信息"><a href="#查看notepad-隐藏的重要信息" class="headerlink" title="查看notepad++隐藏的重要信息"></a>查看notepad++隐藏的重要信息</h3><p>我们使用内存取证分析工具对内存镜像的一些基本信息进行了分析，发现了内存中存在<code>notepad++</code>进程，使用相关技术手段把<code>notepad++</code>进程导出<code>dmp</code>文件格式，下面我们使用二进制编辑器<a href="https://hexeditor.en.softonic.com/" target="_blank" rel="noopener">hexeditor</a>打开1188.dmp查看寻找隐藏的信息</p><blockquote><p>PS: 也可以使用 <code>strings</code> 这个工具将它的字符串打印出来</p></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings 1188.dmp &gt;  &gt;&gt;1188.txt</span><br><span class="line">strings 1188.dmp &gt; 3324.txt | grep flag</span><br></pre></td></tr></table></figure><p> <img src="/" class="lazyload" data-src="https://i.loli.net/2019/04/23/5cbe002f6323a.png"  alt="notepad++进程隐藏的信息"></p><p> 如上图所示，红框中的<code>flag</code>值就是我们需要重要数据。</p><h2 id="全文结束"><a href="#全文结束" class="headerlink" title="全文结束"></a>全文结束</h2><blockquote><p>谢谢大家观看！如有错误或其它技术交流问题，请留言反馈。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机电子取证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 内存取证 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
